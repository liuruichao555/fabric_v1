// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/policies.proto

package common;

public final class Policies {
  private Policies() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.Policy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * For outside implementors, consider the first 1000 types reserved, otherwise one of PolicyType
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    int getType();

    /**
     * <code>bytes policy = 2;</code>
     */
    com.google.protobuf.ByteString getPolicy();
  }
  /**
   * <pre>
   * Policy expresses a policy which the orderer can evaluate, because there has been some desire expressed to support
   * multiple policy engines, this is typed as a oneof for now
   * </pre>
   *
   * Protobuf type {@code common.Policy}
   */
  public  static final class Policy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.Policy)
      PolicyOrBuilder {
    // Use Policy.newBuilder() to construct.
    private Policy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Policy() {
      type_ = 0;
      policy_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Policy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 18: {

              policy_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return common.Policies.internal_static_common_Policy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return common.Policies.internal_static_common_Policy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              common.Policies.Policy.class, common.Policies.Policy.Builder.class);
    }

    /**
     * Protobuf enum {@code common.Policy.PolicyType}
     */
    public enum PolicyType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Reserved to check for proper initialization
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>SIGNATURE = 1;</code>
       */
      SIGNATURE(1),
      /**
       * <code>MSP = 2;</code>
       */
      MSP(2),
      /**
       * <code>IMPLICIT_META = 3;</code>
       */
      IMPLICIT_META(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Reserved to check for proper initialization
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>SIGNATURE = 1;</code>
       */
      public static final int SIGNATURE_VALUE = 1;
      /**
       * <code>MSP = 2;</code>
       */
      public static final int MSP_VALUE = 2;
      /**
       * <code>IMPLICIT_META = 3;</code>
       */
      public static final int IMPLICIT_META_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PolicyType valueOf(int value) {
        return forNumber(value);
      }

      public static PolicyType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return SIGNATURE;
          case 2: return MSP;
          case 3: return IMPLICIT_META;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PolicyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PolicyType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PolicyType>() {
              public PolicyType findValueByNumber(int number) {
                return PolicyType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return common.Policies.Policy.getDescriptor().getEnumTypes().get(0);
      }

      private static final PolicyType[] VALUES = values();

      public static PolicyType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PolicyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:common.Policy.PolicyType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * For outside implementors, consider the first 1000 types reserved, otherwise one of PolicyType
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int POLICY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString policy_;
    /**
     * <code>bytes policy = 2;</code>
     */
    public com.google.protobuf.ByteString getPolicy() {
      return policy_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (!policy_.isEmpty()) {
        output.writeBytes(2, policy_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (!policy_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, policy_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof common.Policies.Policy)) {
        return super.equals(obj);
      }
      common.Policies.Policy other = (common.Policies.Policy) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && getPolicy()
          .equals(other.getPolicy());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getPolicy().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static common.Policies.Policy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.Policy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.Policy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.Policy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.Policy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.Policy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.Policy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static common.Policies.Policy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.Policy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.Policy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(common.Policies.Policy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Policy expresses a policy which the orderer can evaluate, because there has been some desire expressed to support
     * multiple policy engines, this is typed as a oneof for now
     * </pre>
     *
     * Protobuf type {@code common.Policy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.Policy)
        common.Policies.PolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return common.Policies.internal_static_common_Policy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return common.Policies.internal_static_common_Policy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                common.Policies.Policy.class, common.Policies.Policy.Builder.class);
      }

      // Construct using common.Policies.Policy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        policy_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return common.Policies.internal_static_common_Policy_descriptor;
      }

      public common.Policies.Policy getDefaultInstanceForType() {
        return common.Policies.Policy.getDefaultInstance();
      }

      public common.Policies.Policy build() {
        common.Policies.Policy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public common.Policies.Policy buildPartial() {
        common.Policies.Policy result = new common.Policies.Policy(this);
        result.type_ = type_;
        result.policy_ = policy_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof common.Policies.Policy) {
          return mergeFrom((common.Policies.Policy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(common.Policies.Policy other) {
        if (other == common.Policies.Policy.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getPolicy() != com.google.protobuf.ByteString.EMPTY) {
          setPolicy(other.getPolicy());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        common.Policies.Policy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (common.Policies.Policy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * For outside implementors, consider the first 1000 types reserved, otherwise one of PolicyType
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * For outside implementors, consider the first 1000 types reserved, otherwise one of PolicyType
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For outside implementors, consider the first 1000 types reserved, otherwise one of PolicyType
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString policy_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes policy = 2;</code>
       */
      public com.google.protobuf.ByteString getPolicy() {
        return policy_;
      }
      /**
       * <code>bytes policy = 2;</code>
       */
      public Builder setPolicy(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        policy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes policy = 2;</code>
       */
      public Builder clearPolicy() {
        
        policy_ = getDefaultInstance().getPolicy();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:common.Policy)
    }

    // @@protoc_insertion_point(class_scope:common.Policy)
    private static final common.Policies.Policy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new common.Policies.Policy();
    }

    public static common.Policies.Policy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Policy>
        PARSER = new com.google.protobuf.AbstractParser<Policy>() {
      public Policy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Policy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Policy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Policy> getParserForType() {
      return PARSER;
    }

    public common.Policies.Policy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignaturePolicyEnvelopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.SignaturePolicyEnvelope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    boolean hasPolicy();
    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    common.Policies.SignaturePolicy getPolicy();
    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    common.Policies.SignaturePolicyOrBuilder getPolicyOrBuilder();

    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    java.util.List<common.MspPrincipal.MSPPrincipal> 
        getIdentitiesList();
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    common.MspPrincipal.MSPPrincipal getIdentities(int index);
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    int getIdentitiesCount();
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    java.util.List<? extends common.MspPrincipal.MSPPrincipalOrBuilder> 
        getIdentitiesOrBuilderList();
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    common.MspPrincipal.MSPPrincipalOrBuilder getIdentitiesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * SignaturePolicyEnvelope wraps a SignaturePolicy and includes a version for future enhancements
   * </pre>
   *
   * Protobuf type {@code common.SignaturePolicyEnvelope}
   */
  public  static final class SignaturePolicyEnvelope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.SignaturePolicyEnvelope)
      SignaturePolicyEnvelopeOrBuilder {
    // Use SignaturePolicyEnvelope.newBuilder() to construct.
    private SignaturePolicyEnvelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignaturePolicyEnvelope() {
      version_ = 0;
      identities_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SignaturePolicyEnvelope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              version_ = input.readInt32();
              break;
            }
            case 18: {
              common.Policies.SignaturePolicy.Builder subBuilder = null;
              if (policy_ != null) {
                subBuilder = policy_.toBuilder();
              }
              policy_ = input.readMessage(common.Policies.SignaturePolicy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(policy_);
                policy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                identities_ = new java.util.ArrayList<common.MspPrincipal.MSPPrincipal>();
                mutable_bitField0_ |= 0x00000004;
              }
              identities_.add(
                  input.readMessage(common.MspPrincipal.MSPPrincipal.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          identities_ = java.util.Collections.unmodifiableList(identities_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return common.Policies.internal_static_common_SignaturePolicyEnvelope_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return common.Policies.internal_static_common_SignaturePolicyEnvelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              common.Policies.SignaturePolicyEnvelope.class, common.Policies.SignaturePolicyEnvelope.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int POLICY_FIELD_NUMBER = 2;
    private common.Policies.SignaturePolicy policy_;
    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    public boolean hasPolicy() {
      return policy_ != null;
    }
    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    public common.Policies.SignaturePolicy getPolicy() {
      return policy_ == null ? common.Policies.SignaturePolicy.getDefaultInstance() : policy_;
    }
    /**
     * <code>.common.SignaturePolicy policy = 2;</code>
     */
    public common.Policies.SignaturePolicyOrBuilder getPolicyOrBuilder() {
      return getPolicy();
    }

    public static final int IDENTITIES_FIELD_NUMBER = 3;
    private java.util.List<common.MspPrincipal.MSPPrincipal> identities_;
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    public java.util.List<common.MspPrincipal.MSPPrincipal> getIdentitiesList() {
      return identities_;
    }
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    public java.util.List<? extends common.MspPrincipal.MSPPrincipalOrBuilder> 
        getIdentitiesOrBuilderList() {
      return identities_;
    }
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    public int getIdentitiesCount() {
      return identities_.size();
    }
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    public common.MspPrincipal.MSPPrincipal getIdentities(int index) {
      return identities_.get(index);
    }
    /**
     * <code>repeated .common.MSPPrincipal identities = 3;</code>
     */
    public common.MspPrincipal.MSPPrincipalOrBuilder getIdentitiesOrBuilder(
        int index) {
      return identities_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeInt32(1, version_);
      }
      if (policy_ != null) {
        output.writeMessage(2, getPolicy());
      }
      for (int i = 0; i < identities_.size(); i++) {
        output.writeMessage(3, identities_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (policy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPolicy());
      }
      for (int i = 0; i < identities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identities_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof common.Policies.SignaturePolicyEnvelope)) {
        return super.equals(obj);
      }
      common.Policies.SignaturePolicyEnvelope other = (common.Policies.SignaturePolicyEnvelope) obj;

      boolean result = true;
      result = result && (getVersion()
          == other.getVersion());
      result = result && (hasPolicy() == other.hasPolicy());
      if (hasPolicy()) {
        result = result && getPolicy()
            .equals(other.getPolicy());
      }
      result = result && getIdentitiesList()
          .equals(other.getIdentitiesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      if (hasPolicy()) {
        hash = (37 * hash) + POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getPolicy().hashCode();
      }
      if (getIdentitiesCount() > 0) {
        hash = (37 * hash) + IDENTITIES_FIELD_NUMBER;
        hash = (53 * hash) + getIdentitiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.SignaturePolicyEnvelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicyEnvelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicyEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(common.Policies.SignaturePolicyEnvelope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignaturePolicyEnvelope wraps a SignaturePolicy and includes a version for future enhancements
     * </pre>
     *
     * Protobuf type {@code common.SignaturePolicyEnvelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.SignaturePolicyEnvelope)
        common.Policies.SignaturePolicyEnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return common.Policies.internal_static_common_SignaturePolicyEnvelope_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return common.Policies.internal_static_common_SignaturePolicyEnvelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                common.Policies.SignaturePolicyEnvelope.class, common.Policies.SignaturePolicyEnvelope.Builder.class);
      }

      // Construct using common.Policies.SignaturePolicyEnvelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIdentitiesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;

        if (policyBuilder_ == null) {
          policy_ = null;
        } else {
          policy_ = null;
          policyBuilder_ = null;
        }
        if (identitiesBuilder_ == null) {
          identities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          identitiesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return common.Policies.internal_static_common_SignaturePolicyEnvelope_descriptor;
      }

      public common.Policies.SignaturePolicyEnvelope getDefaultInstanceForType() {
        return common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
      }

      public common.Policies.SignaturePolicyEnvelope build() {
        common.Policies.SignaturePolicyEnvelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public common.Policies.SignaturePolicyEnvelope buildPartial() {
        common.Policies.SignaturePolicyEnvelope result = new common.Policies.SignaturePolicyEnvelope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.version_ = version_;
        if (policyBuilder_ == null) {
          result.policy_ = policy_;
        } else {
          result.policy_ = policyBuilder_.build();
        }
        if (identitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            identities_ = java.util.Collections.unmodifiableList(identities_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.identities_ = identities_;
        } else {
          result.identities_ = identitiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof common.Policies.SignaturePolicyEnvelope) {
          return mergeFrom((common.Policies.SignaturePolicyEnvelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(common.Policies.SignaturePolicyEnvelope other) {
        if (other == common.Policies.SignaturePolicyEnvelope.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.hasPolicy()) {
          mergePolicy(other.getPolicy());
        }
        if (identitiesBuilder_ == null) {
          if (!other.identities_.isEmpty()) {
            if (identities_.isEmpty()) {
              identities_ = other.identities_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureIdentitiesIsMutable();
              identities_.addAll(other.identities_);
            }
            onChanged();
          }
        } else {
          if (!other.identities_.isEmpty()) {
            if (identitiesBuilder_.isEmpty()) {
              identitiesBuilder_.dispose();
              identitiesBuilder_ = null;
              identities_ = other.identities_;
              bitField0_ = (bitField0_ & ~0x00000004);
              identitiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIdentitiesFieldBuilder() : null;
            } else {
              identitiesBuilder_.addAllMessages(other.identities_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        common.Policies.SignaturePolicyEnvelope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (common.Policies.SignaturePolicyEnvelope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private common.Policies.SignaturePolicy policy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder> policyBuilder_;
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public boolean hasPolicy() {
        return policyBuilder_ != null || policy_ != null;
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public common.Policies.SignaturePolicy getPolicy() {
        if (policyBuilder_ == null) {
          return policy_ == null ? common.Policies.SignaturePolicy.getDefaultInstance() : policy_;
        } else {
          return policyBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public Builder setPolicy(common.Policies.SignaturePolicy value) {
        if (policyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policy_ = value;
          onChanged();
        } else {
          policyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public Builder setPolicy(
          common.Policies.SignaturePolicy.Builder builderForValue) {
        if (policyBuilder_ == null) {
          policy_ = builderForValue.build();
          onChanged();
        } else {
          policyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public Builder mergePolicy(common.Policies.SignaturePolicy value) {
        if (policyBuilder_ == null) {
          if (policy_ != null) {
            policy_ =
              common.Policies.SignaturePolicy.newBuilder(policy_).mergeFrom(value).buildPartial();
          } else {
            policy_ = value;
          }
          onChanged();
        } else {
          policyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public Builder clearPolicy() {
        if (policyBuilder_ == null) {
          policy_ = null;
          onChanged();
        } else {
          policy_ = null;
          policyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public common.Policies.SignaturePolicy.Builder getPolicyBuilder() {
        
        onChanged();
        return getPolicyFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      public common.Policies.SignaturePolicyOrBuilder getPolicyOrBuilder() {
        if (policyBuilder_ != null) {
          return policyBuilder_.getMessageOrBuilder();
        } else {
          return policy_ == null ?
              common.Policies.SignaturePolicy.getDefaultInstance() : policy_;
        }
      }
      /**
       * <code>.common.SignaturePolicy policy = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder> 
          getPolicyFieldBuilder() {
        if (policyBuilder_ == null) {
          policyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder>(
                  getPolicy(),
                  getParentForChildren(),
                  isClean());
          policy_ = null;
        }
        return policyBuilder_;
      }

      private java.util.List<common.MspPrincipal.MSPPrincipal> identities_ =
        java.util.Collections.emptyList();
      private void ensureIdentitiesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          identities_ = new java.util.ArrayList<common.MspPrincipal.MSPPrincipal>(identities_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          common.MspPrincipal.MSPPrincipal, common.MspPrincipal.MSPPrincipal.Builder, common.MspPrincipal.MSPPrincipalOrBuilder> identitiesBuilder_;

      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public java.util.List<common.MspPrincipal.MSPPrincipal> getIdentitiesList() {
        if (identitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(identities_);
        } else {
          return identitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public int getIdentitiesCount() {
        if (identitiesBuilder_ == null) {
          return identities_.size();
        } else {
          return identitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public common.MspPrincipal.MSPPrincipal getIdentities(int index) {
        if (identitiesBuilder_ == null) {
          return identities_.get(index);
        } else {
          return identitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder setIdentities(
          int index, common.MspPrincipal.MSPPrincipal value) {
        if (identitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentitiesIsMutable();
          identities_.set(index, value);
          onChanged();
        } else {
          identitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder setIdentities(
          int index, common.MspPrincipal.MSPPrincipal.Builder builderForValue) {
        if (identitiesBuilder_ == null) {
          ensureIdentitiesIsMutable();
          identities_.set(index, builderForValue.build());
          onChanged();
        } else {
          identitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder addIdentities(common.MspPrincipal.MSPPrincipal value) {
        if (identitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentitiesIsMutable();
          identities_.add(value);
          onChanged();
        } else {
          identitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder addIdentities(
          int index, common.MspPrincipal.MSPPrincipal value) {
        if (identitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentitiesIsMutable();
          identities_.add(index, value);
          onChanged();
        } else {
          identitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder addIdentities(
          common.MspPrincipal.MSPPrincipal.Builder builderForValue) {
        if (identitiesBuilder_ == null) {
          ensureIdentitiesIsMutable();
          identities_.add(builderForValue.build());
          onChanged();
        } else {
          identitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder addIdentities(
          int index, common.MspPrincipal.MSPPrincipal.Builder builderForValue) {
        if (identitiesBuilder_ == null) {
          ensureIdentitiesIsMutable();
          identities_.add(index, builderForValue.build());
          onChanged();
        } else {
          identitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder addAllIdentities(
          java.lang.Iterable<? extends common.MspPrincipal.MSPPrincipal> values) {
        if (identitiesBuilder_ == null) {
          ensureIdentitiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, identities_);
          onChanged();
        } else {
          identitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder clearIdentities() {
        if (identitiesBuilder_ == null) {
          identities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          identitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public Builder removeIdentities(int index) {
        if (identitiesBuilder_ == null) {
          ensureIdentitiesIsMutable();
          identities_.remove(index);
          onChanged();
        } else {
          identitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public common.MspPrincipal.MSPPrincipal.Builder getIdentitiesBuilder(
          int index) {
        return getIdentitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public common.MspPrincipal.MSPPrincipalOrBuilder getIdentitiesOrBuilder(
          int index) {
        if (identitiesBuilder_ == null) {
          return identities_.get(index);  } else {
          return identitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public java.util.List<? extends common.MspPrincipal.MSPPrincipalOrBuilder> 
           getIdentitiesOrBuilderList() {
        if (identitiesBuilder_ != null) {
          return identitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(identities_);
        }
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public common.MspPrincipal.MSPPrincipal.Builder addIdentitiesBuilder() {
        return getIdentitiesFieldBuilder().addBuilder(
            common.MspPrincipal.MSPPrincipal.getDefaultInstance());
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public common.MspPrincipal.MSPPrincipal.Builder addIdentitiesBuilder(
          int index) {
        return getIdentitiesFieldBuilder().addBuilder(
            index, common.MspPrincipal.MSPPrincipal.getDefaultInstance());
      }
      /**
       * <code>repeated .common.MSPPrincipal identities = 3;</code>
       */
      public java.util.List<common.MspPrincipal.MSPPrincipal.Builder> 
           getIdentitiesBuilderList() {
        return getIdentitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          common.MspPrincipal.MSPPrincipal, common.MspPrincipal.MSPPrincipal.Builder, common.MspPrincipal.MSPPrincipalOrBuilder> 
          getIdentitiesFieldBuilder() {
        if (identitiesBuilder_ == null) {
          identitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              common.MspPrincipal.MSPPrincipal, common.MspPrincipal.MSPPrincipal.Builder, common.MspPrincipal.MSPPrincipalOrBuilder>(
                  identities_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          identities_ = null;
        }
        return identitiesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:common.SignaturePolicyEnvelope)
    }

    // @@protoc_insertion_point(class_scope:common.SignaturePolicyEnvelope)
    private static final common.Policies.SignaturePolicyEnvelope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new common.Policies.SignaturePolicyEnvelope();
    }

    public static common.Policies.SignaturePolicyEnvelope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignaturePolicyEnvelope>
        PARSER = new com.google.protobuf.AbstractParser<SignaturePolicyEnvelope>() {
      public SignaturePolicyEnvelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SignaturePolicyEnvelope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignaturePolicyEnvelope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignaturePolicyEnvelope> getParserForType() {
      return PARSER;
    }

    public common.Policies.SignaturePolicyEnvelope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignaturePolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.SignaturePolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 signed_by = 1;</code>
     */
    int getSignedBy();

    /**
     * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
     */
    common.Policies.SignaturePolicy.NOutOf getNOutOf();
    /**
     * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
     */
    common.Policies.SignaturePolicy.NOutOfOrBuilder getNOutOfOrBuilder();

    public common.Policies.SignaturePolicy.TypeCase getTypeCase();
  }
  /**
   * <pre>
   * SignaturePolicy is a recursive message structure which defines a featherweight DSL for describing
   * policies which are more complicated than 'exactly this signature'.  The NOutOf operator is sufficent
   * to express AND as well as OR, as well as of course N out of the following M policies
   * SignedBy implies that the signature is from a valid certificate which is signed by the trusted
   * authority specified in the bytes.  This will be the certificate itself for a self-signed certificate
   * and will be the CA for more traditional certificates
   * </pre>
   *
   * Protobuf type {@code common.SignaturePolicy}
   */
  public  static final class SignaturePolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.SignaturePolicy)
      SignaturePolicyOrBuilder {
    // Use SignaturePolicy.newBuilder() to construct.
    private SignaturePolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignaturePolicy() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SignaturePolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              typeCase_ = 1;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              common.Policies.SignaturePolicy.NOutOf.Builder subBuilder = null;
              if (typeCase_ == 2) {
                subBuilder = ((common.Policies.SignaturePolicy.NOutOf) type_).toBuilder();
              }
              type_ =
                  input.readMessage(common.Policies.SignaturePolicy.NOutOf.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((common.Policies.SignaturePolicy.NOutOf) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 2;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return common.Policies.internal_static_common_SignaturePolicy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return common.Policies.internal_static_common_SignaturePolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              common.Policies.SignaturePolicy.class, common.Policies.SignaturePolicy.Builder.class);
    }

    public interface NOutOfOrBuilder extends
        // @@protoc_insertion_point(interface_extends:common.SignaturePolicy.NOutOf)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 N = 1;</code>
       */
      int getN();

      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      java.util.List<common.Policies.SignaturePolicy> 
          getPoliciesList();
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      common.Policies.SignaturePolicy getPolicies(int index);
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      int getPoliciesCount();
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      java.util.List<? extends common.Policies.SignaturePolicyOrBuilder> 
          getPoliciesOrBuilderList();
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      common.Policies.SignaturePolicyOrBuilder getPoliciesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code common.SignaturePolicy.NOutOf}
     */
    public  static final class NOutOf extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:common.SignaturePolicy.NOutOf)
        NOutOfOrBuilder {
      // Use NOutOf.newBuilder() to construct.
      private NOutOf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NOutOf() {
        n_ = 0;
        policies_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private NOutOf(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                n_ = input.readInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  policies_ = new java.util.ArrayList<common.Policies.SignaturePolicy>();
                  mutable_bitField0_ |= 0x00000002;
                }
                policies_.add(
                    input.readMessage(common.Policies.SignaturePolicy.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            policies_ = java.util.Collections.unmodifiableList(policies_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return common.Policies.internal_static_common_SignaturePolicy_NOutOf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return common.Policies.internal_static_common_SignaturePolicy_NOutOf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                common.Policies.SignaturePolicy.NOutOf.class, common.Policies.SignaturePolicy.NOutOf.Builder.class);
      }

      private int bitField0_;
      public static final int N_FIELD_NUMBER = 1;
      private int n_;
      /**
       * <code>int32 N = 1;</code>
       */
      public int getN() {
        return n_;
      }

      public static final int POLICIES_FIELD_NUMBER = 2;
      private java.util.List<common.Policies.SignaturePolicy> policies_;
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      public java.util.List<common.Policies.SignaturePolicy> getPoliciesList() {
        return policies_;
      }
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      public java.util.List<? extends common.Policies.SignaturePolicyOrBuilder> 
          getPoliciesOrBuilderList() {
        return policies_;
      }
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      public int getPoliciesCount() {
        return policies_.size();
      }
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      public common.Policies.SignaturePolicy getPolicies(int index) {
        return policies_.get(index);
      }
      /**
       * <code>repeated .common.SignaturePolicy policies = 2;</code>
       */
      public common.Policies.SignaturePolicyOrBuilder getPoliciesOrBuilder(
          int index) {
        return policies_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (n_ != 0) {
          output.writeInt32(1, n_);
        }
        for (int i = 0; i < policies_.size(); i++) {
          output.writeMessage(2, policies_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (n_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, n_);
        }
        for (int i = 0; i < policies_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, policies_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof common.Policies.SignaturePolicy.NOutOf)) {
          return super.equals(obj);
        }
        common.Policies.SignaturePolicy.NOutOf other = (common.Policies.SignaturePolicy.NOutOf) obj;

        boolean result = true;
        result = result && (getN()
            == other.getN());
        result = result && getPoliciesList()
            .equals(other.getPoliciesList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + N_FIELD_NUMBER;
        hash = (53 * hash) + getN();
        if (getPoliciesCount() > 0) {
          hash = (37 * hash) + POLICIES_FIELD_NUMBER;
          hash = (53 * hash) + getPoliciesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static common.Policies.SignaturePolicy.NOutOf parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(common.Policies.SignaturePolicy.NOutOf prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code common.SignaturePolicy.NOutOf}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:common.SignaturePolicy.NOutOf)
          common.Policies.SignaturePolicy.NOutOfOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return common.Policies.internal_static_common_SignaturePolicy_NOutOf_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return common.Policies.internal_static_common_SignaturePolicy_NOutOf_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  common.Policies.SignaturePolicy.NOutOf.class, common.Policies.SignaturePolicy.NOutOf.Builder.class);
        }

        // Construct using common.Policies.SignaturePolicy.NOutOf.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPoliciesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          n_ = 0;

          if (policiesBuilder_ == null) {
            policies_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            policiesBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return common.Policies.internal_static_common_SignaturePolicy_NOutOf_descriptor;
        }

        public common.Policies.SignaturePolicy.NOutOf getDefaultInstanceForType() {
          return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
        }

        public common.Policies.SignaturePolicy.NOutOf build() {
          common.Policies.SignaturePolicy.NOutOf result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public common.Policies.SignaturePolicy.NOutOf buildPartial() {
          common.Policies.SignaturePolicy.NOutOf result = new common.Policies.SignaturePolicy.NOutOf(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.n_ = n_;
          if (policiesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              policies_ = java.util.Collections.unmodifiableList(policies_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.policies_ = policies_;
          } else {
            result.policies_ = policiesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof common.Policies.SignaturePolicy.NOutOf) {
            return mergeFrom((common.Policies.SignaturePolicy.NOutOf)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(common.Policies.SignaturePolicy.NOutOf other) {
          if (other == common.Policies.SignaturePolicy.NOutOf.getDefaultInstance()) return this;
          if (other.getN() != 0) {
            setN(other.getN());
          }
          if (policiesBuilder_ == null) {
            if (!other.policies_.isEmpty()) {
              if (policies_.isEmpty()) {
                policies_ = other.policies_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePoliciesIsMutable();
                policies_.addAll(other.policies_);
              }
              onChanged();
            }
          } else {
            if (!other.policies_.isEmpty()) {
              if (policiesBuilder_.isEmpty()) {
                policiesBuilder_.dispose();
                policiesBuilder_ = null;
                policies_ = other.policies_;
                bitField0_ = (bitField0_ & ~0x00000002);
                policiesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getPoliciesFieldBuilder() : null;
              } else {
                policiesBuilder_.addAllMessages(other.policies_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          common.Policies.SignaturePolicy.NOutOf parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (common.Policies.SignaturePolicy.NOutOf) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int n_ ;
        /**
         * <code>int32 N = 1;</code>
         */
        public int getN() {
          return n_;
        }
        /**
         * <code>int32 N = 1;</code>
         */
        public Builder setN(int value) {
          
          n_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 N = 1;</code>
         */
        public Builder clearN() {
          
          n_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<common.Policies.SignaturePolicy> policies_ =
          java.util.Collections.emptyList();
        private void ensurePoliciesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            policies_ = new java.util.ArrayList<common.Policies.SignaturePolicy>(policies_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder> policiesBuilder_;

        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public java.util.List<common.Policies.SignaturePolicy> getPoliciesList() {
          if (policiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(policies_);
          } else {
            return policiesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public int getPoliciesCount() {
          if (policiesBuilder_ == null) {
            return policies_.size();
          } else {
            return policiesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public common.Policies.SignaturePolicy getPolicies(int index) {
          if (policiesBuilder_ == null) {
            return policies_.get(index);
          } else {
            return policiesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder setPolicies(
            int index, common.Policies.SignaturePolicy value) {
          if (policiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoliciesIsMutable();
            policies_.set(index, value);
            onChanged();
          } else {
            policiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder setPolicies(
            int index, common.Policies.SignaturePolicy.Builder builderForValue) {
          if (policiesBuilder_ == null) {
            ensurePoliciesIsMutable();
            policies_.set(index, builderForValue.build());
            onChanged();
          } else {
            policiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder addPolicies(common.Policies.SignaturePolicy value) {
          if (policiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoliciesIsMutable();
            policies_.add(value);
            onChanged();
          } else {
            policiesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder addPolicies(
            int index, common.Policies.SignaturePolicy value) {
          if (policiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePoliciesIsMutable();
            policies_.add(index, value);
            onChanged();
          } else {
            policiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder addPolicies(
            common.Policies.SignaturePolicy.Builder builderForValue) {
          if (policiesBuilder_ == null) {
            ensurePoliciesIsMutable();
            policies_.add(builderForValue.build());
            onChanged();
          } else {
            policiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder addPolicies(
            int index, common.Policies.SignaturePolicy.Builder builderForValue) {
          if (policiesBuilder_ == null) {
            ensurePoliciesIsMutable();
            policies_.add(index, builderForValue.build());
            onChanged();
          } else {
            policiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder addAllPolicies(
            java.lang.Iterable<? extends common.Policies.SignaturePolicy> values) {
          if (policiesBuilder_ == null) {
            ensurePoliciesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, policies_);
            onChanged();
          } else {
            policiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder clearPolicies() {
          if (policiesBuilder_ == null) {
            policies_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            policiesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public Builder removePolicies(int index) {
          if (policiesBuilder_ == null) {
            ensurePoliciesIsMutable();
            policies_.remove(index);
            onChanged();
          } else {
            policiesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public common.Policies.SignaturePolicy.Builder getPoliciesBuilder(
            int index) {
          return getPoliciesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public common.Policies.SignaturePolicyOrBuilder getPoliciesOrBuilder(
            int index) {
          if (policiesBuilder_ == null) {
            return policies_.get(index);  } else {
            return policiesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public java.util.List<? extends common.Policies.SignaturePolicyOrBuilder> 
             getPoliciesOrBuilderList() {
          if (policiesBuilder_ != null) {
            return policiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(policies_);
          }
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public common.Policies.SignaturePolicy.Builder addPoliciesBuilder() {
          return getPoliciesFieldBuilder().addBuilder(
              common.Policies.SignaturePolicy.getDefaultInstance());
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public common.Policies.SignaturePolicy.Builder addPoliciesBuilder(
            int index) {
          return getPoliciesFieldBuilder().addBuilder(
              index, common.Policies.SignaturePolicy.getDefaultInstance());
        }
        /**
         * <code>repeated .common.SignaturePolicy policies = 2;</code>
         */
        public java.util.List<common.Policies.SignaturePolicy.Builder> 
             getPoliciesBuilderList() {
          return getPoliciesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder> 
            getPoliciesFieldBuilder() {
          if (policiesBuilder_ == null) {
            policiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                common.Policies.SignaturePolicy, common.Policies.SignaturePolicy.Builder, common.Policies.SignaturePolicyOrBuilder>(
                    policies_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            policies_ = null;
          }
          return policiesBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:common.SignaturePolicy.NOutOf)
      }

      // @@protoc_insertion_point(class_scope:common.SignaturePolicy.NOutOf)
      private static final common.Policies.SignaturePolicy.NOutOf DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new common.Policies.SignaturePolicy.NOutOf();
      }

      public static common.Policies.SignaturePolicy.NOutOf getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<NOutOf>
          PARSER = new com.google.protobuf.AbstractParser<NOutOf>() {
        public NOutOf parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new NOutOf(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NOutOf> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NOutOf> getParserForType() {
        return PARSER;
      }

      public common.Policies.SignaturePolicy.NOutOf getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int typeCase_ = 0;
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite {
      SIGNED_BY(1),
      N_OUT_OF(2),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return SIGNED_BY;
          case 2: return N_OUT_OF;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int SIGNED_BY_FIELD_NUMBER = 1;
    /**
     * <code>int32 signed_by = 1;</code>
     */
    public int getSignedBy() {
      if (typeCase_ == 1) {
        return (java.lang.Integer) type_;
      }
      return 0;
    }

    public static final int N_OUT_OF_FIELD_NUMBER = 2;
    /**
     * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
     */
    public common.Policies.SignaturePolicy.NOutOf getNOutOf() {
      if (typeCase_ == 2) {
         return (common.Policies.SignaturePolicy.NOutOf) type_;
      }
      return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
    }
    /**
     * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
     */
    public common.Policies.SignaturePolicy.NOutOfOrBuilder getNOutOfOrBuilder() {
      if (typeCase_ == 2) {
         return (common.Policies.SignaturePolicy.NOutOf) type_;
      }
      return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (common.Policies.SignaturePolicy.NOutOf) type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) type_));
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (common.Policies.SignaturePolicy.NOutOf) type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof common.Policies.SignaturePolicy)) {
        return super.equals(obj);
      }
      common.Policies.SignaturePolicy other = (common.Policies.SignaturePolicy) obj;

      boolean result = true;
      result = result && getTypeCase().equals(
          other.getTypeCase());
      if (!result) return false;
      switch (typeCase_) {
        case 1:
          result = result && (getSignedBy()
              == other.getSignedBy());
          break;
        case 2:
          result = result && getNOutOf()
              .equals(other.getNOutOf());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + SIGNED_BY_FIELD_NUMBER;
          hash = (53 * hash) + getSignedBy();
          break;
        case 2:
          hash = (37 * hash) + N_OUT_OF_FIELD_NUMBER;
          hash = (53 * hash) + getNOutOf().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static common.Policies.SignaturePolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.SignaturePolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.SignaturePolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.SignaturePolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.SignaturePolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.SignaturePolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.SignaturePolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.SignaturePolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(common.Policies.SignaturePolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignaturePolicy is a recursive message structure which defines a featherweight DSL for describing
     * policies which are more complicated than 'exactly this signature'.  The NOutOf operator is sufficent
     * to express AND as well as OR, as well as of course N out of the following M policies
     * SignedBy implies that the signature is from a valid certificate which is signed by the trusted
     * authority specified in the bytes.  This will be the certificate itself for a self-signed certificate
     * and will be the CA for more traditional certificates
     * </pre>
     *
     * Protobuf type {@code common.SignaturePolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.SignaturePolicy)
        common.Policies.SignaturePolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return common.Policies.internal_static_common_SignaturePolicy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return common.Policies.internal_static_common_SignaturePolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                common.Policies.SignaturePolicy.class, common.Policies.SignaturePolicy.Builder.class);
      }

      // Construct using common.Policies.SignaturePolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return common.Policies.internal_static_common_SignaturePolicy_descriptor;
      }

      public common.Policies.SignaturePolicy getDefaultInstanceForType() {
        return common.Policies.SignaturePolicy.getDefaultInstance();
      }

      public common.Policies.SignaturePolicy build() {
        common.Policies.SignaturePolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public common.Policies.SignaturePolicy buildPartial() {
        common.Policies.SignaturePolicy result = new common.Policies.SignaturePolicy(this);
        if (typeCase_ == 1) {
          result.type_ = type_;
        }
        if (typeCase_ == 2) {
          if (nOutOfBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = nOutOfBuilder_.build();
          }
        }
        result.typeCase_ = typeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof common.Policies.SignaturePolicy) {
          return mergeFrom((common.Policies.SignaturePolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(common.Policies.SignaturePolicy other) {
        if (other == common.Policies.SignaturePolicy.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case SIGNED_BY: {
            setSignedBy(other.getSignedBy());
            break;
          }
          case N_OUT_OF: {
            mergeNOutOf(other.getNOutOf());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        common.Policies.SignaturePolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (common.Policies.SignaturePolicy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 signed_by = 1;</code>
       */
      public int getSignedBy() {
        if (typeCase_ == 1) {
          return (java.lang.Integer) type_;
        }
        return 0;
      }
      /**
       * <code>int32 signed_by = 1;</code>
       */
      public Builder setSignedBy(int value) {
        typeCase_ = 1;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 signed_by = 1;</code>
       */
      public Builder clearSignedBy() {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          common.Policies.SignaturePolicy.NOutOf, common.Policies.SignaturePolicy.NOutOf.Builder, common.Policies.SignaturePolicy.NOutOfOrBuilder> nOutOfBuilder_;
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public common.Policies.SignaturePolicy.NOutOf getNOutOf() {
        if (nOutOfBuilder_ == null) {
          if (typeCase_ == 2) {
            return (common.Policies.SignaturePolicy.NOutOf) type_;
          }
          return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return nOutOfBuilder_.getMessage();
          }
          return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
        }
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public Builder setNOutOf(common.Policies.SignaturePolicy.NOutOf value) {
        if (nOutOfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          nOutOfBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public Builder setNOutOf(
          common.Policies.SignaturePolicy.NOutOf.Builder builderForValue) {
        if (nOutOfBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          nOutOfBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public Builder mergeNOutOf(common.Policies.SignaturePolicy.NOutOf value) {
        if (nOutOfBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != common.Policies.SignaturePolicy.NOutOf.getDefaultInstance()) {
            type_ = common.Policies.SignaturePolicy.NOutOf.newBuilder((common.Policies.SignaturePolicy.NOutOf) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            nOutOfBuilder_.mergeFrom(value);
          }
          nOutOfBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public Builder clearNOutOf() {
        if (nOutOfBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          nOutOfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public common.Policies.SignaturePolicy.NOutOf.Builder getNOutOfBuilder() {
        return getNOutOfFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      public common.Policies.SignaturePolicy.NOutOfOrBuilder getNOutOfOrBuilder() {
        if ((typeCase_ == 2) && (nOutOfBuilder_ != null)) {
          return nOutOfBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (common.Policies.SignaturePolicy.NOutOf) type_;
          }
          return common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
        }
      }
      /**
       * <code>.common.SignaturePolicy.NOutOf n_out_of = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          common.Policies.SignaturePolicy.NOutOf, common.Policies.SignaturePolicy.NOutOf.Builder, common.Policies.SignaturePolicy.NOutOfOrBuilder> 
          getNOutOfFieldBuilder() {
        if (nOutOfBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = common.Policies.SignaturePolicy.NOutOf.getDefaultInstance();
          }
          nOutOfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              common.Policies.SignaturePolicy.NOutOf, common.Policies.SignaturePolicy.NOutOf.Builder, common.Policies.SignaturePolicy.NOutOfOrBuilder>(
                  (common.Policies.SignaturePolicy.NOutOf) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();;
        return nOutOfBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:common.SignaturePolicy)
    }

    // @@protoc_insertion_point(class_scope:common.SignaturePolicy)
    private static final common.Policies.SignaturePolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new common.Policies.SignaturePolicy();
    }

    public static common.Policies.SignaturePolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignaturePolicy>
        PARSER = new com.google.protobuf.AbstractParser<SignaturePolicy>() {
      public SignaturePolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SignaturePolicy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignaturePolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignaturePolicy> getParserForType() {
      return PARSER;
    }

    public common.Policies.SignaturePolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImplicitMetaPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:common.ImplicitMetaPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sub_policy = 1;</code>
     */
    java.lang.String getSubPolicy();
    /**
     * <code>string sub_policy = 1;</code>
     */
    com.google.protobuf.ByteString
        getSubPolicyBytes();

    /**
     * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
     */
    int getRuleValue();
    /**
     * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
     */
    common.Policies.ImplicitMetaPolicy.Rule getRule();
  }
  /**
   * <pre>
   * ImplicitMetaPolicy is a policy type which depends on the hierarchical nature of the configuration
   * It is implicit because the rule is generate implicitly based on the number of sub policies
   * It is meta because it depends only on the result of other policies
   * When evaluated, this policy iterates over all immediate child sub-groups, retrieves the policy
   * of name sub_policy, evaluates the collection and applies the rule.
   * For example, with 4 sub-groups, and a policy name of "foo", ImplicitMetaPolicy retrieves
   * each sub-group, retrieves policy "foo" for each subgroup, evaluates it, and, in the case of ANY
   * 1 satisfied is sufficient, ALL would require 4 signatures, and MAJORITY would require 3 signatures.
   * </pre>
   *
   * Protobuf type {@code common.ImplicitMetaPolicy}
   */
  public  static final class ImplicitMetaPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:common.ImplicitMetaPolicy)
      ImplicitMetaPolicyOrBuilder {
    // Use ImplicitMetaPolicy.newBuilder() to construct.
    private ImplicitMetaPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImplicitMetaPolicy() {
      subPolicy_ = "";
      rule_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ImplicitMetaPolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              subPolicy_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              rule_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return common.Policies.internal_static_common_ImplicitMetaPolicy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return common.Policies.internal_static_common_ImplicitMetaPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              common.Policies.ImplicitMetaPolicy.class, common.Policies.ImplicitMetaPolicy.Builder.class);
    }

    /**
     * Protobuf enum {@code common.ImplicitMetaPolicy.Rule}
     */
    public enum Rule
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Requires any of the sub-policies be satisfied, if no sub-policies exist, always returns true
       * </pre>
       *
       * <code>ANY = 0;</code>
       */
      ANY(0),
      /**
       * <pre>
       * Requires all of the sub-policies be satisfied
       * </pre>
       *
       * <code>ALL = 1;</code>
       */
      ALL(1),
      /**
       * <pre>
       * Requires a strict majority (greater than half) of the sub-policies be satisfied
       * </pre>
       *
       * <code>MAJORITY = 2;</code>
       */
      MAJORITY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Requires any of the sub-policies be satisfied, if no sub-policies exist, always returns true
       * </pre>
       *
       * <code>ANY = 0;</code>
       */
      public static final int ANY_VALUE = 0;
      /**
       * <pre>
       * Requires all of the sub-policies be satisfied
       * </pre>
       *
       * <code>ALL = 1;</code>
       */
      public static final int ALL_VALUE = 1;
      /**
       * <pre>
       * Requires a strict majority (greater than half) of the sub-policies be satisfied
       * </pre>
       *
       * <code>MAJORITY = 2;</code>
       */
      public static final int MAJORITY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Rule valueOf(int value) {
        return forNumber(value);
      }

      public static Rule forNumber(int value) {
        switch (value) {
          case 0: return ANY;
          case 1: return ALL;
          case 2: return MAJORITY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Rule>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Rule> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Rule>() {
              public Rule findValueByNumber(int number) {
                return Rule.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return common.Policies.ImplicitMetaPolicy.getDescriptor().getEnumTypes().get(0);
      }

      private static final Rule[] VALUES = values();

      public static Rule valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Rule(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:common.ImplicitMetaPolicy.Rule)
    }

    public static final int SUB_POLICY_FIELD_NUMBER = 1;
    private volatile java.lang.Object subPolicy_;
    /**
     * <code>string sub_policy = 1;</code>
     */
    public java.lang.String getSubPolicy() {
      java.lang.Object ref = subPolicy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subPolicy_ = s;
        return s;
      }
    }
    /**
     * <code>string sub_policy = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSubPolicyBytes() {
      java.lang.Object ref = subPolicy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subPolicy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RULE_FIELD_NUMBER = 2;
    private int rule_;
    /**
     * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
     */
    public int getRuleValue() {
      return rule_;
    }
    /**
     * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
     */
    public common.Policies.ImplicitMetaPolicy.Rule getRule() {
      common.Policies.ImplicitMetaPolicy.Rule result = common.Policies.ImplicitMetaPolicy.Rule.valueOf(rule_);
      return result == null ? common.Policies.ImplicitMetaPolicy.Rule.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSubPolicyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, subPolicy_);
      }
      if (rule_ != common.Policies.ImplicitMetaPolicy.Rule.ANY.getNumber()) {
        output.writeEnum(2, rule_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSubPolicyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, subPolicy_);
      }
      if (rule_ != common.Policies.ImplicitMetaPolicy.Rule.ANY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, rule_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof common.Policies.ImplicitMetaPolicy)) {
        return super.equals(obj);
      }
      common.Policies.ImplicitMetaPolicy other = (common.Policies.ImplicitMetaPolicy) obj;

      boolean result = true;
      result = result && getSubPolicy()
          .equals(other.getSubPolicy());
      result = result && rule_ == other.rule_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUB_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getSubPolicy().hashCode();
      hash = (37 * hash) + RULE_FIELD_NUMBER;
      hash = (53 * hash) + rule_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static common.Policies.ImplicitMetaPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.ImplicitMetaPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static common.Policies.ImplicitMetaPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static common.Policies.ImplicitMetaPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(common.Policies.ImplicitMetaPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ImplicitMetaPolicy is a policy type which depends on the hierarchical nature of the configuration
     * It is implicit because the rule is generate implicitly based on the number of sub policies
     * It is meta because it depends only on the result of other policies
     * When evaluated, this policy iterates over all immediate child sub-groups, retrieves the policy
     * of name sub_policy, evaluates the collection and applies the rule.
     * For example, with 4 sub-groups, and a policy name of "foo", ImplicitMetaPolicy retrieves
     * each sub-group, retrieves policy "foo" for each subgroup, evaluates it, and, in the case of ANY
     * 1 satisfied is sufficient, ALL would require 4 signatures, and MAJORITY would require 3 signatures.
     * </pre>
     *
     * Protobuf type {@code common.ImplicitMetaPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:common.ImplicitMetaPolicy)
        common.Policies.ImplicitMetaPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return common.Policies.internal_static_common_ImplicitMetaPolicy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return common.Policies.internal_static_common_ImplicitMetaPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                common.Policies.ImplicitMetaPolicy.class, common.Policies.ImplicitMetaPolicy.Builder.class);
      }

      // Construct using common.Policies.ImplicitMetaPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        subPolicy_ = "";

        rule_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return common.Policies.internal_static_common_ImplicitMetaPolicy_descriptor;
      }

      public common.Policies.ImplicitMetaPolicy getDefaultInstanceForType() {
        return common.Policies.ImplicitMetaPolicy.getDefaultInstance();
      }

      public common.Policies.ImplicitMetaPolicy build() {
        common.Policies.ImplicitMetaPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public common.Policies.ImplicitMetaPolicy buildPartial() {
        common.Policies.ImplicitMetaPolicy result = new common.Policies.ImplicitMetaPolicy(this);
        result.subPolicy_ = subPolicy_;
        result.rule_ = rule_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof common.Policies.ImplicitMetaPolicy) {
          return mergeFrom((common.Policies.ImplicitMetaPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(common.Policies.ImplicitMetaPolicy other) {
        if (other == common.Policies.ImplicitMetaPolicy.getDefaultInstance()) return this;
        if (!other.getSubPolicy().isEmpty()) {
          subPolicy_ = other.subPolicy_;
          onChanged();
        }
        if (other.rule_ != 0) {
          setRuleValue(other.getRuleValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        common.Policies.ImplicitMetaPolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (common.Policies.ImplicitMetaPolicy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object subPolicy_ = "";
      /**
       * <code>string sub_policy = 1;</code>
       */
      public java.lang.String getSubPolicy() {
        java.lang.Object ref = subPolicy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subPolicy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sub_policy = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSubPolicyBytes() {
        java.lang.Object ref = subPolicy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subPolicy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sub_policy = 1;</code>
       */
      public Builder setSubPolicy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sub_policy = 1;</code>
       */
      public Builder clearSubPolicy() {
        
        subPolicy_ = getDefaultInstance().getSubPolicy();
        onChanged();
        return this;
      }
      /**
       * <code>string sub_policy = 1;</code>
       */
      public Builder setSubPolicyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subPolicy_ = value;
        onChanged();
        return this;
      }

      private int rule_ = 0;
      /**
       * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
       */
      public int getRuleValue() {
        return rule_;
      }
      /**
       * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
       */
      public Builder setRuleValue(int value) {
        rule_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
       */
      public common.Policies.ImplicitMetaPolicy.Rule getRule() {
        common.Policies.ImplicitMetaPolicy.Rule result = common.Policies.ImplicitMetaPolicy.Rule.valueOf(rule_);
        return result == null ? common.Policies.ImplicitMetaPolicy.Rule.UNRECOGNIZED : result;
      }
      /**
       * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
       */
      public Builder setRule(common.Policies.ImplicitMetaPolicy.Rule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        rule_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.common.ImplicitMetaPolicy.Rule rule = 2;</code>
       */
      public Builder clearRule() {
        
        rule_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:common.ImplicitMetaPolicy)
    }

    // @@protoc_insertion_point(class_scope:common.ImplicitMetaPolicy)
    private static final common.Policies.ImplicitMetaPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new common.Policies.ImplicitMetaPolicy();
    }

    public static common.Policies.ImplicitMetaPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImplicitMetaPolicy>
        PARSER = new com.google.protobuf.AbstractParser<ImplicitMetaPolicy>() {
      public ImplicitMetaPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImplicitMetaPolicy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImplicitMetaPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImplicitMetaPolicy> getParserForType() {
      return PARSER;
    }

    public common.Policies.ImplicitMetaPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_Policy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_Policy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_SignaturePolicyEnvelope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_SignaturePolicyEnvelope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_SignaturePolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_SignaturePolicy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_SignaturePolicy_NOutOf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_SignaturePolicy_NOutOf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_common_ImplicitMetaPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_common_ImplicitMetaPolicy_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025common/policies.proto\022\006common\032\032common/" +
      "msp_principal.proto\"l\n\006Policy\022\014\n\004type\030\001 " +
      "\001(\005\022\016\n\006policy\030\002 \001(\014\"D\n\nPolicyType\022\013\n\007UNK" +
      "NOWN\020\000\022\r\n\tSIGNATURE\020\001\022\007\n\003MSP\020\002\022\021\n\rIMPLIC" +
      "IT_META\020\003\"}\n\027SignaturePolicyEnvelope\022\017\n\007" +
      "version\030\001 \001(\005\022\'\n\006policy\030\002 \001(\0132\027.common.S" +
      "ignaturePolicy\022(\n\nidentities\030\003 \003(\0132\024.com" +
      "mon.MSPPrincipal\"\242\001\n\017SignaturePolicy\022\023\n\t" +
      "signed_by\030\001 \001(\005H\000\0222\n\010n_out_of\030\002 \001(\0132\036.co" +
      "mmon.SignaturePolicy.NOutOfH\000\032>\n\006NOutOf\022",
      "\t\n\001N\030\001 \001(\005\022)\n\010policies\030\002 \003(\0132\027.common.Si" +
      "gnaturePolicyB\006\n\004Type\"\177\n\022ImplicitMetaPol" +
      "icy\022\022\n\nsub_policy\030\001 \001(\t\022-\n\004rule\030\002 \001(\0162\037." +
      "common.ImplicitMetaPolicy.Rule\"&\n\004Rule\022\007" +
      "\n\003ANY\020\000\022\007\n\003ALL\020\001\022\014\n\010MAJORITY\020\002B-Z+github" +
      ".com/hyperledger/fabric/protos/commonb\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          common.MspPrincipal.getDescriptor(),
        }, assigner);
    internal_static_common_Policy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_common_Policy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_Policy_descriptor,
        new java.lang.String[] { "Type", "Policy", });
    internal_static_common_SignaturePolicyEnvelope_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_common_SignaturePolicyEnvelope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_SignaturePolicyEnvelope_descriptor,
        new java.lang.String[] { "Version", "Policy", "Identities", });
    internal_static_common_SignaturePolicy_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_common_SignaturePolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_SignaturePolicy_descriptor,
        new java.lang.String[] { "SignedBy", "NOutOf", "Type", });
    internal_static_common_SignaturePolicy_NOutOf_descriptor =
      internal_static_common_SignaturePolicy_descriptor.getNestedTypes().get(0);
    internal_static_common_SignaturePolicy_NOutOf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_SignaturePolicy_NOutOf_descriptor,
        new java.lang.String[] { "N", "Policies", });
    internal_static_common_ImplicitMetaPolicy_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_common_ImplicitMetaPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_common_ImplicitMetaPolicy_descriptor,
        new java.lang.String[] { "SubPolicy", "Rule", });
    common.MspPrincipal.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
