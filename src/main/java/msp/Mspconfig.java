// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msp/mspconfig.proto

package msp;

public final class Mspconfig {
  private Mspconfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MSPConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msp.MSPConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type holds the type of the MSP; the default one would
     * be of type FABRIC implementing an X.509 based provider
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     * Config is MSP dependent configuration info
     * </pre>
     *
     * <code>bytes config = 2;</code>
     */
    com.google.protobuf.ByteString getConfig();
  }
  /**
   * <pre>
   * MSPConfig collects all the configuration information for
   * an MSP. The Config field should be unmarshalled in a way
   * that depends on the Type
   * </pre>
   *
   * Protobuf type {@code msp.MSPConfig}
   */
  public  static final class MSPConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msp.MSPConfig)
      MSPConfigOrBuilder {
    // Use MSPConfig.newBuilder() to construct.
    private MSPConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MSPConfig() {
      type_ = 0;
      config_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MSPConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 18: {

              config_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msp.Mspconfig.internal_static_msp_MSPConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msp.Mspconfig.internal_static_msp_MSPConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msp.Mspconfig.MSPConfig.class, msp.Mspconfig.MSPConfig.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type holds the type of the MSP; the default one would
     * be of type FABRIC implementing an X.509 based provider
     * </pre>
     *
     * <code>int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString config_;
    /**
     * <pre>
     * Config is MSP dependent configuration info
     * </pre>
     *
     * <code>bytes config = 2;</code>
     */
    public com.google.protobuf.ByteString getConfig() {
      return config_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (!config_.isEmpty()) {
        output.writeBytes(2, config_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (!config_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, config_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msp.Mspconfig.MSPConfig)) {
        return super.equals(obj);
      }
      msp.Mspconfig.MSPConfig other = (msp.Mspconfig.MSPConfig) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && getConfig()
          .equals(other.getConfig());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getConfig().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msp.Mspconfig.MSPConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.MSPConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.MSPConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.MSPConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msp.Mspconfig.MSPConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MSPConfig collects all the configuration information for
     * an MSP. The Config field should be unmarshalled in a way
     * that depends on the Type
     * </pre>
     *
     * Protobuf type {@code msp.MSPConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msp.MSPConfig)
        msp.Mspconfig.MSPConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msp.Mspconfig.internal_static_msp_MSPConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msp.Mspconfig.internal_static_msp_MSPConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msp.Mspconfig.MSPConfig.class, msp.Mspconfig.MSPConfig.Builder.class);
      }

      // Construct using msp.Mspconfig.MSPConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        config_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msp.Mspconfig.internal_static_msp_MSPConfig_descriptor;
      }

      public msp.Mspconfig.MSPConfig getDefaultInstanceForType() {
        return msp.Mspconfig.MSPConfig.getDefaultInstance();
      }

      public msp.Mspconfig.MSPConfig build() {
        msp.Mspconfig.MSPConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public msp.Mspconfig.MSPConfig buildPartial() {
        msp.Mspconfig.MSPConfig result = new msp.Mspconfig.MSPConfig(this);
        result.type_ = type_;
        result.config_ = config_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msp.Mspconfig.MSPConfig) {
          return mergeFrom((msp.Mspconfig.MSPConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msp.Mspconfig.MSPConfig other) {
        if (other == msp.Mspconfig.MSPConfig.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getConfig() != com.google.protobuf.ByteString.EMPTY) {
          setConfig(other.getConfig());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msp.Mspconfig.MSPConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msp.Mspconfig.MSPConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * Type holds the type of the MSP; the default one would
       * be of type FABRIC implementing an X.509 based provider
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * Type holds the type of the MSP; the default one would
       * be of type FABRIC implementing an X.509 based provider
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type holds the type of the MSP; the default one would
       * be of type FABRIC implementing an X.509 based provider
       * </pre>
       *
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString config_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Config is MSP dependent configuration info
       * </pre>
       *
       * <code>bytes config = 2;</code>
       */
      public com.google.protobuf.ByteString getConfig() {
        return config_;
      }
      /**
       * <pre>
       * Config is MSP dependent configuration info
       * </pre>
       *
       * <code>bytes config = 2;</code>
       */
      public Builder setConfig(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        config_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Config is MSP dependent configuration info
       * </pre>
       *
       * <code>bytes config = 2;</code>
       */
      public Builder clearConfig() {
        
        config_ = getDefaultInstance().getConfig();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:msp.MSPConfig)
    }

    // @@protoc_insertion_point(class_scope:msp.MSPConfig)
    private static final msp.Mspconfig.MSPConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msp.Mspconfig.MSPConfig();
    }

    public static msp.Mspconfig.MSPConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MSPConfig>
        PARSER = new com.google.protobuf.AbstractParser<MSPConfig>() {
      public MSPConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MSPConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MSPConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MSPConfig> getParserForType() {
      return PARSER;
    }

    public msp.Mspconfig.MSPConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FabricMSPConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msp.FabricMSPConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name holds the identifier of the MSP; MSP identifier
     * is chosen by the application that governs this MSP.
     * For example, and assuming the default implementation of MSP,
     * that is X.509-based and considers a single Issuer,
     * this can refer to the Subject OU field or the Issuer OU field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name holds the identifier of the MSP; MSP identifier
     * is chosen by the application that governs this MSP.
     * For example, and assuming the default implementation of MSP,
     * that is X.509-based and considers a single Issuer,
     * this can refer to the Subject OU field or the Issuer OU field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getRootCertsList();
    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    int getRootCertsCount();
    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    com.google.protobuf.ByteString getRootCerts(int index);

    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getIntermediateCertsList();
    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    int getIntermediateCertsCount();
    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    com.google.protobuf.ByteString getIntermediateCerts(int index);

    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getAdminsList();
    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    int getAdminsCount();
    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    com.google.protobuf.ByteString getAdmins(int index);

    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getRevocationListList();
    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    int getRevocationListCount();
    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    com.google.protobuf.ByteString getRevocationList(int index);

    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    boolean hasSigningIdentity();
    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    msp.Mspconfig.SigningIdentityInfo getSigningIdentity();
    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    msp.Mspconfig.SigningIdentityInfoOrBuilder getSigningIdentityOrBuilder();

    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    java.util.List<msp.Mspconfig.FabricOUIdentifier> 
        getOrganizationalUnitIdentifiersList();
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    msp.Mspconfig.FabricOUIdentifier getOrganizationalUnitIdentifiers(int index);
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    int getOrganizationalUnitIdentifiersCount();
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    java.util.List<? extends msp.Mspconfig.FabricOUIdentifierOrBuilder> 
        getOrganizationalUnitIdentifiersOrBuilderList();
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    msp.Mspconfig.FabricOUIdentifierOrBuilder getOrganizationalUnitIdentifiersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * FabricMSPConfig collects all the configuration information for
   * a Fabric MSP.
   * Here we assume a default certificate validation policy, where
   * any certificate signed by any of the listed rootCA certs would
   * be considered as valid under this MSP.
   * This MSP may or may not come with a signing identity. If it does,
   * it can also issue signing identities. If it does not, it can only
   * be used to validate and verify certificates.
   * </pre>
   *
   * Protobuf type {@code msp.FabricMSPConfig}
   */
  public  static final class FabricMSPConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msp.FabricMSPConfig)
      FabricMSPConfigOrBuilder {
    // Use FabricMSPConfig.newBuilder() to construct.
    private FabricMSPConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FabricMSPConfig() {
      name_ = "";
      rootCerts_ = java.util.Collections.emptyList();
      intermediateCerts_ = java.util.Collections.emptyList();
      admins_ = java.util.Collections.emptyList();
      revocationList_ = java.util.Collections.emptyList();
      organizationalUnitIdentifiers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FabricMSPConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rootCerts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              rootCerts_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                intermediateCerts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              intermediateCerts_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                admins_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000008;
              }
              admins_.add(input.readBytes());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                revocationList_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000010;
              }
              revocationList_.add(input.readBytes());
              break;
            }
            case 50: {
              msp.Mspconfig.SigningIdentityInfo.Builder subBuilder = null;
              if (signingIdentity_ != null) {
                subBuilder = signingIdentity_.toBuilder();
              }
              signingIdentity_ = input.readMessage(msp.Mspconfig.SigningIdentityInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signingIdentity_);
                signingIdentity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                organizationalUnitIdentifiers_ = new java.util.ArrayList<msp.Mspconfig.FabricOUIdentifier>();
                mutable_bitField0_ |= 0x00000040;
              }
              organizationalUnitIdentifiers_.add(
                  input.readMessage(msp.Mspconfig.FabricOUIdentifier.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rootCerts_ = java.util.Collections.unmodifiableList(rootCerts_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          intermediateCerts_ = java.util.Collections.unmodifiableList(intermediateCerts_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          admins_ = java.util.Collections.unmodifiableList(admins_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          revocationList_ = java.util.Collections.unmodifiableList(revocationList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          organizationalUnitIdentifiers_ = java.util.Collections.unmodifiableList(organizationalUnitIdentifiers_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msp.Mspconfig.internal_static_msp_FabricMSPConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msp.Mspconfig.internal_static_msp_FabricMSPConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msp.Mspconfig.FabricMSPConfig.class, msp.Mspconfig.FabricMSPConfig.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name holds the identifier of the MSP; MSP identifier
     * is chosen by the application that governs this MSP.
     * For example, and assuming the default implementation of MSP,
     * that is X.509-based and considers a single Issuer,
     * this can refer to the Subject OU field or the Issuer OU field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name holds the identifier of the MSP; MSP identifier
     * is chosen by the application that governs this MSP.
     * For example, and assuming the default implementation of MSP,
     * that is X.509-based and considers a single Issuer,
     * this can refer to the Subject OU field or the Issuer OU field.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOT_CERTS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> rootCerts_;
    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getRootCertsList() {
      return rootCerts_;
    }
    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    public int getRootCertsCount() {
      return rootCerts_.size();
    }
    /**
     * <pre>
     * List of root certificates trusted by this MSP
     * they are used upon certificate validation (see
     * comment for IntermediateCerts below)
     * </pre>
     *
     * <code>repeated bytes root_certs = 2;</code>
     */
    public com.google.protobuf.ByteString getRootCerts(int index) {
      return rootCerts_.get(index);
    }

    public static final int INTERMEDIATE_CERTS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> intermediateCerts_;
    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIntermediateCertsList() {
      return intermediateCerts_;
    }
    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    public int getIntermediateCertsCount() {
      return intermediateCerts_.size();
    }
    /**
     * <pre>
     * List of intermediate certificates trusted by this MSP;
     * they are used upon certificate validation as follows:
     * validation attempts to build a path from the certificate
     * to be validated (which is at one end of the path) and
     * one of the certs in the RootCerts field (which is at
     * the other end of the path). If the path is longer than
     * 2, certificates in the middle are searched within the
     * IntermediateCerts pool
     * </pre>
     *
     * <code>repeated bytes intermediate_certs = 3;</code>
     */
    public com.google.protobuf.ByteString getIntermediateCerts(int index) {
      return intermediateCerts_.get(index);
    }

    public static final int ADMINS_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> admins_;
    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getAdminsList() {
      return admins_;
    }
    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    public int getAdminsCount() {
      return admins_.size();
    }
    /**
     * <pre>
     * Identity denoting the administrator of this MSP
     * </pre>
     *
     * <code>repeated bytes admins = 4;</code>
     */
    public com.google.protobuf.ByteString getAdmins(int index) {
      return admins_.get(index);
    }

    public static final int REVOCATION_LIST_FIELD_NUMBER = 5;
    private java.util.List<com.google.protobuf.ByteString> revocationList_;
    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getRevocationListList() {
      return revocationList_;
    }
    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    public int getRevocationListCount() {
      return revocationList_.size();
    }
    /**
     * <pre>
     * Identity revocation list
     * </pre>
     *
     * <code>repeated bytes revocation_list = 5;</code>
     */
    public com.google.protobuf.ByteString getRevocationList(int index) {
      return revocationList_.get(index);
    }

    public static final int SIGNING_IDENTITY_FIELD_NUMBER = 6;
    private msp.Mspconfig.SigningIdentityInfo signingIdentity_;
    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    public boolean hasSigningIdentity() {
      return signingIdentity_ != null;
    }
    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    public msp.Mspconfig.SigningIdentityInfo getSigningIdentity() {
      return signingIdentity_ == null ? msp.Mspconfig.SigningIdentityInfo.getDefaultInstance() : signingIdentity_;
    }
    /**
     * <pre>
     * SigningIdentity holds information on the signing identity
     * this peer is to use, and which is to be imported by the
     * MSP defined before
     * </pre>
     *
     * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
     */
    public msp.Mspconfig.SigningIdentityInfoOrBuilder getSigningIdentityOrBuilder() {
      return getSigningIdentity();
    }

    public static final int ORGANIZATIONAL_UNIT_IDENTIFIERS_FIELD_NUMBER = 7;
    private java.util.List<msp.Mspconfig.FabricOUIdentifier> organizationalUnitIdentifiers_;
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    public java.util.List<msp.Mspconfig.FabricOUIdentifier> getOrganizationalUnitIdentifiersList() {
      return organizationalUnitIdentifiers_;
    }
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    public java.util.List<? extends msp.Mspconfig.FabricOUIdentifierOrBuilder> 
        getOrganizationalUnitIdentifiersOrBuilderList() {
      return organizationalUnitIdentifiers_;
    }
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    public int getOrganizationalUnitIdentifiersCount() {
      return organizationalUnitIdentifiers_.size();
    }
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    public msp.Mspconfig.FabricOUIdentifier getOrganizationalUnitIdentifiers(int index) {
      return organizationalUnitIdentifiers_.get(index);
    }
    /**
     * <pre>
     * OrganizationalUnitIdentifiers holds one or more
     * fabric organizational unit identifiers that belong to
     * this MSP configuration
     * </pre>
     *
     * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
     */
    public msp.Mspconfig.FabricOUIdentifierOrBuilder getOrganizationalUnitIdentifiersOrBuilder(
        int index) {
      return organizationalUnitIdentifiers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < rootCerts_.size(); i++) {
        output.writeBytes(2, rootCerts_.get(i));
      }
      for (int i = 0; i < intermediateCerts_.size(); i++) {
        output.writeBytes(3, intermediateCerts_.get(i));
      }
      for (int i = 0; i < admins_.size(); i++) {
        output.writeBytes(4, admins_.get(i));
      }
      for (int i = 0; i < revocationList_.size(); i++) {
        output.writeBytes(5, revocationList_.get(i));
      }
      if (signingIdentity_ != null) {
        output.writeMessage(6, getSigningIdentity());
      }
      for (int i = 0; i < organizationalUnitIdentifiers_.size(); i++) {
        output.writeMessage(7, organizationalUnitIdentifiers_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rootCerts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(rootCerts_.get(i));
        }
        size += dataSize;
        size += 1 * getRootCertsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intermediateCerts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(intermediateCerts_.get(i));
        }
        size += dataSize;
        size += 1 * getIntermediateCertsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < admins_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(admins_.get(i));
        }
        size += dataSize;
        size += 1 * getAdminsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < revocationList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(revocationList_.get(i));
        }
        size += dataSize;
        size += 1 * getRevocationListList().size();
      }
      if (signingIdentity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSigningIdentity());
      }
      for (int i = 0; i < organizationalUnitIdentifiers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, organizationalUnitIdentifiers_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msp.Mspconfig.FabricMSPConfig)) {
        return super.equals(obj);
      }
      msp.Mspconfig.FabricMSPConfig other = (msp.Mspconfig.FabricMSPConfig) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getRootCertsList()
          .equals(other.getRootCertsList());
      result = result && getIntermediateCertsList()
          .equals(other.getIntermediateCertsList());
      result = result && getAdminsList()
          .equals(other.getAdminsList());
      result = result && getRevocationListList()
          .equals(other.getRevocationListList());
      result = result && (hasSigningIdentity() == other.hasSigningIdentity());
      if (hasSigningIdentity()) {
        result = result && getSigningIdentity()
            .equals(other.getSigningIdentity());
      }
      result = result && getOrganizationalUnitIdentifiersList()
          .equals(other.getOrganizationalUnitIdentifiersList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getRootCertsCount() > 0) {
        hash = (37 * hash) + ROOT_CERTS_FIELD_NUMBER;
        hash = (53 * hash) + getRootCertsList().hashCode();
      }
      if (getIntermediateCertsCount() > 0) {
        hash = (37 * hash) + INTERMEDIATE_CERTS_FIELD_NUMBER;
        hash = (53 * hash) + getIntermediateCertsList().hashCode();
      }
      if (getAdminsCount() > 0) {
        hash = (37 * hash) + ADMINS_FIELD_NUMBER;
        hash = (53 * hash) + getAdminsList().hashCode();
      }
      if (getRevocationListCount() > 0) {
        hash = (37 * hash) + REVOCATION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getRevocationListList().hashCode();
      }
      if (hasSigningIdentity()) {
        hash = (37 * hash) + SIGNING_IDENTITY_FIELD_NUMBER;
        hash = (53 * hash) + getSigningIdentity().hashCode();
      }
      if (getOrganizationalUnitIdentifiersCount() > 0) {
        hash = (37 * hash) + ORGANIZATIONAL_UNIT_IDENTIFIERS_FIELD_NUMBER;
        hash = (53 * hash) + getOrganizationalUnitIdentifiersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.FabricMSPConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricMSPConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricMSPConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msp.Mspconfig.FabricMSPConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FabricMSPConfig collects all the configuration information for
     * a Fabric MSP.
     * Here we assume a default certificate validation policy, where
     * any certificate signed by any of the listed rootCA certs would
     * be considered as valid under this MSP.
     * This MSP may or may not come with a signing identity. If it does,
     * it can also issue signing identities. If it does not, it can only
     * be used to validate and verify certificates.
     * </pre>
     *
     * Protobuf type {@code msp.FabricMSPConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msp.FabricMSPConfig)
        msp.Mspconfig.FabricMSPConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msp.Mspconfig.internal_static_msp_FabricMSPConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msp.Mspconfig.internal_static_msp_FabricMSPConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msp.Mspconfig.FabricMSPConfig.class, msp.Mspconfig.FabricMSPConfig.Builder.class);
      }

      // Construct using msp.Mspconfig.FabricMSPConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOrganizationalUnitIdentifiersFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        rootCerts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        intermediateCerts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        admins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        revocationList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (signingIdentityBuilder_ == null) {
          signingIdentity_ = null;
        } else {
          signingIdentity_ = null;
          signingIdentityBuilder_ = null;
        }
        if (organizationalUnitIdentifiersBuilder_ == null) {
          organizationalUnitIdentifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          organizationalUnitIdentifiersBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msp.Mspconfig.internal_static_msp_FabricMSPConfig_descriptor;
      }

      public msp.Mspconfig.FabricMSPConfig getDefaultInstanceForType() {
        return msp.Mspconfig.FabricMSPConfig.getDefaultInstance();
      }

      public msp.Mspconfig.FabricMSPConfig build() {
        msp.Mspconfig.FabricMSPConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public msp.Mspconfig.FabricMSPConfig buildPartial() {
        msp.Mspconfig.FabricMSPConfig result = new msp.Mspconfig.FabricMSPConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          rootCerts_ = java.util.Collections.unmodifiableList(rootCerts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rootCerts_ = rootCerts_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          intermediateCerts_ = java.util.Collections.unmodifiableList(intermediateCerts_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.intermediateCerts_ = intermediateCerts_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          admins_ = java.util.Collections.unmodifiableList(admins_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.admins_ = admins_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          revocationList_ = java.util.Collections.unmodifiableList(revocationList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.revocationList_ = revocationList_;
        if (signingIdentityBuilder_ == null) {
          result.signingIdentity_ = signingIdentity_;
        } else {
          result.signingIdentity_ = signingIdentityBuilder_.build();
        }
        if (organizationalUnitIdentifiersBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            organizationalUnitIdentifiers_ = java.util.Collections.unmodifiableList(organizationalUnitIdentifiers_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.organizationalUnitIdentifiers_ = organizationalUnitIdentifiers_;
        } else {
          result.organizationalUnitIdentifiers_ = organizationalUnitIdentifiersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msp.Mspconfig.FabricMSPConfig) {
          return mergeFrom((msp.Mspconfig.FabricMSPConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msp.Mspconfig.FabricMSPConfig other) {
        if (other == msp.Mspconfig.FabricMSPConfig.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.rootCerts_.isEmpty()) {
          if (rootCerts_.isEmpty()) {
            rootCerts_ = other.rootCerts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRootCertsIsMutable();
            rootCerts_.addAll(other.rootCerts_);
          }
          onChanged();
        }
        if (!other.intermediateCerts_.isEmpty()) {
          if (intermediateCerts_.isEmpty()) {
            intermediateCerts_ = other.intermediateCerts_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureIntermediateCertsIsMutable();
            intermediateCerts_.addAll(other.intermediateCerts_);
          }
          onChanged();
        }
        if (!other.admins_.isEmpty()) {
          if (admins_.isEmpty()) {
            admins_ = other.admins_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAdminsIsMutable();
            admins_.addAll(other.admins_);
          }
          onChanged();
        }
        if (!other.revocationList_.isEmpty()) {
          if (revocationList_.isEmpty()) {
            revocationList_ = other.revocationList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRevocationListIsMutable();
            revocationList_.addAll(other.revocationList_);
          }
          onChanged();
        }
        if (other.hasSigningIdentity()) {
          mergeSigningIdentity(other.getSigningIdentity());
        }
        if (organizationalUnitIdentifiersBuilder_ == null) {
          if (!other.organizationalUnitIdentifiers_.isEmpty()) {
            if (organizationalUnitIdentifiers_.isEmpty()) {
              organizationalUnitIdentifiers_ = other.organizationalUnitIdentifiers_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOrganizationalUnitIdentifiersIsMutable();
              organizationalUnitIdentifiers_.addAll(other.organizationalUnitIdentifiers_);
            }
            onChanged();
          }
        } else {
          if (!other.organizationalUnitIdentifiers_.isEmpty()) {
            if (organizationalUnitIdentifiersBuilder_.isEmpty()) {
              organizationalUnitIdentifiersBuilder_.dispose();
              organizationalUnitIdentifiersBuilder_ = null;
              organizationalUnitIdentifiers_ = other.organizationalUnitIdentifiers_;
              bitField0_ = (bitField0_ & ~0x00000040);
              organizationalUnitIdentifiersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOrganizationalUnitIdentifiersFieldBuilder() : null;
            } else {
              organizationalUnitIdentifiersBuilder_.addAllMessages(other.organizationalUnitIdentifiers_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msp.Mspconfig.FabricMSPConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msp.Mspconfig.FabricMSPConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name holds the identifier of the MSP; MSP identifier
       * is chosen by the application that governs this MSP.
       * For example, and assuming the default implementation of MSP,
       * that is X.509-based and considers a single Issuer,
       * this can refer to the Subject OU field or the Issuer OU field.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name holds the identifier of the MSP; MSP identifier
       * is chosen by the application that governs this MSP.
       * For example, and assuming the default implementation of MSP,
       * that is X.509-based and considers a single Issuer,
       * this can refer to the Subject OU field or the Issuer OU field.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name holds the identifier of the MSP; MSP identifier
       * is chosen by the application that governs this MSP.
       * For example, and assuming the default implementation of MSP,
       * that is X.509-based and considers a single Issuer,
       * this can refer to the Subject OU field or the Issuer OU field.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name holds the identifier of the MSP; MSP identifier
       * is chosen by the application that governs this MSP.
       * For example, and assuming the default implementation of MSP,
       * that is X.509-based and considers a single Issuer,
       * this can refer to the Subject OU field or the Issuer OU field.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name holds the identifier of the MSP; MSP identifier
       * is chosen by the application that governs this MSP.
       * For example, and assuming the default implementation of MSP,
       * that is X.509-based and considers a single Issuer,
       * this can refer to the Subject OU field or the Issuer OU field.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> rootCerts_ = java.util.Collections.emptyList();
      private void ensureRootCertsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rootCerts_ = new java.util.ArrayList<com.google.protobuf.ByteString>(rootCerts_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRootCertsList() {
        return java.util.Collections.unmodifiableList(rootCerts_);
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public int getRootCertsCount() {
        return rootCerts_.size();
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public com.google.protobuf.ByteString getRootCerts(int index) {
        return rootCerts_.get(index);
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public Builder setRootCerts(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootCertsIsMutable();
        rootCerts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public Builder addRootCerts(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootCertsIsMutable();
        rootCerts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public Builder addAllRootCerts(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRootCertsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rootCerts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of root certificates trusted by this MSP
       * they are used upon certificate validation (see
       * comment for IntermediateCerts below)
       * </pre>
       *
       * <code>repeated bytes root_certs = 2;</code>
       */
      public Builder clearRootCerts() {
        rootCerts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> intermediateCerts_ = java.util.Collections.emptyList();
      private void ensureIntermediateCertsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          intermediateCerts_ = new java.util.ArrayList<com.google.protobuf.ByteString>(intermediateCerts_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIntermediateCertsList() {
        return java.util.Collections.unmodifiableList(intermediateCerts_);
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public int getIntermediateCertsCount() {
        return intermediateCerts_.size();
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public com.google.protobuf.ByteString getIntermediateCerts(int index) {
        return intermediateCerts_.get(index);
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public Builder setIntermediateCerts(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIntermediateCertsIsMutable();
        intermediateCerts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public Builder addIntermediateCerts(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIntermediateCertsIsMutable();
        intermediateCerts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public Builder addAllIntermediateCerts(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIntermediateCertsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intermediateCerts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * List of intermediate certificates trusted by this MSP;
       * they are used upon certificate validation as follows:
       * validation attempts to build a path from the certificate
       * to be validated (which is at one end of the path) and
       * one of the certs in the RootCerts field (which is at
       * the other end of the path). If the path is longer than
       * 2, certificates in the middle are searched within the
       * IntermediateCerts pool
       * </pre>
       *
       * <code>repeated bytes intermediate_certs = 3;</code>
       */
      public Builder clearIntermediateCerts() {
        intermediateCerts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> admins_ = java.util.Collections.emptyList();
      private void ensureAdminsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          admins_ = new java.util.ArrayList<com.google.protobuf.ByteString>(admins_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getAdminsList() {
        return java.util.Collections.unmodifiableList(admins_);
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public int getAdminsCount() {
        return admins_.size();
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public com.google.protobuf.ByteString getAdmins(int index) {
        return admins_.get(index);
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public Builder setAdmins(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAdminsIsMutable();
        admins_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public Builder addAdmins(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAdminsIsMutable();
        admins_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public Builder addAllAdmins(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureAdminsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, admins_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity denoting the administrator of this MSP
       * </pre>
       *
       * <code>repeated bytes admins = 4;</code>
       */
      public Builder clearAdmins() {
        admins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> revocationList_ = java.util.Collections.emptyList();
      private void ensureRevocationListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          revocationList_ = new java.util.ArrayList<com.google.protobuf.ByteString>(revocationList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRevocationListList() {
        return java.util.Collections.unmodifiableList(revocationList_);
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public int getRevocationListCount() {
        return revocationList_.size();
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public com.google.protobuf.ByteString getRevocationList(int index) {
        return revocationList_.get(index);
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public Builder setRevocationList(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRevocationListIsMutable();
        revocationList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public Builder addRevocationList(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRevocationListIsMutable();
        revocationList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public Builder addAllRevocationList(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRevocationListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, revocationList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identity revocation list
       * </pre>
       *
       * <code>repeated bytes revocation_list = 5;</code>
       */
      public Builder clearRevocationList() {
        revocationList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private msp.Mspconfig.SigningIdentityInfo signingIdentity_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          msp.Mspconfig.SigningIdentityInfo, msp.Mspconfig.SigningIdentityInfo.Builder, msp.Mspconfig.SigningIdentityInfoOrBuilder> signingIdentityBuilder_;
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public boolean hasSigningIdentity() {
        return signingIdentityBuilder_ != null || signingIdentity_ != null;
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public msp.Mspconfig.SigningIdentityInfo getSigningIdentity() {
        if (signingIdentityBuilder_ == null) {
          return signingIdentity_ == null ? msp.Mspconfig.SigningIdentityInfo.getDefaultInstance() : signingIdentity_;
        } else {
          return signingIdentityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public Builder setSigningIdentity(msp.Mspconfig.SigningIdentityInfo value) {
        if (signingIdentityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signingIdentity_ = value;
          onChanged();
        } else {
          signingIdentityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public Builder setSigningIdentity(
          msp.Mspconfig.SigningIdentityInfo.Builder builderForValue) {
        if (signingIdentityBuilder_ == null) {
          signingIdentity_ = builderForValue.build();
          onChanged();
        } else {
          signingIdentityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public Builder mergeSigningIdentity(msp.Mspconfig.SigningIdentityInfo value) {
        if (signingIdentityBuilder_ == null) {
          if (signingIdentity_ != null) {
            signingIdentity_ =
              msp.Mspconfig.SigningIdentityInfo.newBuilder(signingIdentity_).mergeFrom(value).buildPartial();
          } else {
            signingIdentity_ = value;
          }
          onChanged();
        } else {
          signingIdentityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public Builder clearSigningIdentity() {
        if (signingIdentityBuilder_ == null) {
          signingIdentity_ = null;
          onChanged();
        } else {
          signingIdentity_ = null;
          signingIdentityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public msp.Mspconfig.SigningIdentityInfo.Builder getSigningIdentityBuilder() {
        
        onChanged();
        return getSigningIdentityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      public msp.Mspconfig.SigningIdentityInfoOrBuilder getSigningIdentityOrBuilder() {
        if (signingIdentityBuilder_ != null) {
          return signingIdentityBuilder_.getMessageOrBuilder();
        } else {
          return signingIdentity_ == null ?
              msp.Mspconfig.SigningIdentityInfo.getDefaultInstance() : signingIdentity_;
        }
      }
      /**
       * <pre>
       * SigningIdentity holds information on the signing identity
       * this peer is to use, and which is to be imported by the
       * MSP defined before
       * </pre>
       *
       * <code>.msp.SigningIdentityInfo signing_identity = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          msp.Mspconfig.SigningIdentityInfo, msp.Mspconfig.SigningIdentityInfo.Builder, msp.Mspconfig.SigningIdentityInfoOrBuilder> 
          getSigningIdentityFieldBuilder() {
        if (signingIdentityBuilder_ == null) {
          signingIdentityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              msp.Mspconfig.SigningIdentityInfo, msp.Mspconfig.SigningIdentityInfo.Builder, msp.Mspconfig.SigningIdentityInfoOrBuilder>(
                  getSigningIdentity(),
                  getParentForChildren(),
                  isClean());
          signingIdentity_ = null;
        }
        return signingIdentityBuilder_;
      }

      private java.util.List<msp.Mspconfig.FabricOUIdentifier> organizationalUnitIdentifiers_ =
        java.util.Collections.emptyList();
      private void ensureOrganizationalUnitIdentifiersIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          organizationalUnitIdentifiers_ = new java.util.ArrayList<msp.Mspconfig.FabricOUIdentifier>(organizationalUnitIdentifiers_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          msp.Mspconfig.FabricOUIdentifier, msp.Mspconfig.FabricOUIdentifier.Builder, msp.Mspconfig.FabricOUIdentifierOrBuilder> organizationalUnitIdentifiersBuilder_;

      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public java.util.List<msp.Mspconfig.FabricOUIdentifier> getOrganizationalUnitIdentifiersList() {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(organizationalUnitIdentifiers_);
        } else {
          return organizationalUnitIdentifiersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public int getOrganizationalUnitIdentifiersCount() {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          return organizationalUnitIdentifiers_.size();
        } else {
          return organizationalUnitIdentifiersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public msp.Mspconfig.FabricOUIdentifier getOrganizationalUnitIdentifiers(int index) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          return organizationalUnitIdentifiers_.get(index);
        } else {
          return organizationalUnitIdentifiersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder setOrganizationalUnitIdentifiers(
          int index, msp.Mspconfig.FabricOUIdentifier value) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.set(index, value);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder setOrganizationalUnitIdentifiers(
          int index, msp.Mspconfig.FabricOUIdentifier.Builder builderForValue) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.set(index, builderForValue.build());
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder addOrganizationalUnitIdentifiers(msp.Mspconfig.FabricOUIdentifier value) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.add(value);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder addOrganizationalUnitIdentifiers(
          int index, msp.Mspconfig.FabricOUIdentifier value) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.add(index, value);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder addOrganizationalUnitIdentifiers(
          msp.Mspconfig.FabricOUIdentifier.Builder builderForValue) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.add(builderForValue.build());
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder addOrganizationalUnitIdentifiers(
          int index, msp.Mspconfig.FabricOUIdentifier.Builder builderForValue) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.add(index, builderForValue.build());
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder addAllOrganizationalUnitIdentifiers(
          java.lang.Iterable<? extends msp.Mspconfig.FabricOUIdentifier> values) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          ensureOrganizationalUnitIdentifiersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, organizationalUnitIdentifiers_);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder clearOrganizationalUnitIdentifiers() {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          organizationalUnitIdentifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public Builder removeOrganizationalUnitIdentifiers(int index) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          ensureOrganizationalUnitIdentifiersIsMutable();
          organizationalUnitIdentifiers_.remove(index);
          onChanged();
        } else {
          organizationalUnitIdentifiersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public msp.Mspconfig.FabricOUIdentifier.Builder getOrganizationalUnitIdentifiersBuilder(
          int index) {
        return getOrganizationalUnitIdentifiersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public msp.Mspconfig.FabricOUIdentifierOrBuilder getOrganizationalUnitIdentifiersOrBuilder(
          int index) {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          return organizationalUnitIdentifiers_.get(index);  } else {
          return organizationalUnitIdentifiersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public java.util.List<? extends msp.Mspconfig.FabricOUIdentifierOrBuilder> 
           getOrganizationalUnitIdentifiersOrBuilderList() {
        if (organizationalUnitIdentifiersBuilder_ != null) {
          return organizationalUnitIdentifiersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(organizationalUnitIdentifiers_);
        }
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public msp.Mspconfig.FabricOUIdentifier.Builder addOrganizationalUnitIdentifiersBuilder() {
        return getOrganizationalUnitIdentifiersFieldBuilder().addBuilder(
            msp.Mspconfig.FabricOUIdentifier.getDefaultInstance());
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public msp.Mspconfig.FabricOUIdentifier.Builder addOrganizationalUnitIdentifiersBuilder(
          int index) {
        return getOrganizationalUnitIdentifiersFieldBuilder().addBuilder(
            index, msp.Mspconfig.FabricOUIdentifier.getDefaultInstance());
      }
      /**
       * <pre>
       * OrganizationalUnitIdentifiers holds one or more
       * fabric organizational unit identifiers that belong to
       * this MSP configuration
       * </pre>
       *
       * <code>repeated .msp.FabricOUIdentifier organizational_unit_identifiers = 7;</code>
       */
      public java.util.List<msp.Mspconfig.FabricOUIdentifier.Builder> 
           getOrganizationalUnitIdentifiersBuilderList() {
        return getOrganizationalUnitIdentifiersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          msp.Mspconfig.FabricOUIdentifier, msp.Mspconfig.FabricOUIdentifier.Builder, msp.Mspconfig.FabricOUIdentifierOrBuilder> 
          getOrganizationalUnitIdentifiersFieldBuilder() {
        if (organizationalUnitIdentifiersBuilder_ == null) {
          organizationalUnitIdentifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              msp.Mspconfig.FabricOUIdentifier, msp.Mspconfig.FabricOUIdentifier.Builder, msp.Mspconfig.FabricOUIdentifierOrBuilder>(
                  organizationalUnitIdentifiers_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          organizationalUnitIdentifiers_ = null;
        }
        return organizationalUnitIdentifiersBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:msp.FabricMSPConfig)
    }

    // @@protoc_insertion_point(class_scope:msp.FabricMSPConfig)
    private static final msp.Mspconfig.FabricMSPConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msp.Mspconfig.FabricMSPConfig();
    }

    public static msp.Mspconfig.FabricMSPConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FabricMSPConfig>
        PARSER = new com.google.protobuf.AbstractParser<FabricMSPConfig>() {
      public FabricMSPConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FabricMSPConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FabricMSPConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FabricMSPConfig> getParserForType() {
      return PARSER;
    }

    public msp.Mspconfig.FabricMSPConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigningIdentityInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msp.SigningIdentityInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PublicSigner carries the public information of the signing
     * identity. For an X.509 provider this would be represented by
     * an X.509 certificate
     * </pre>
     *
     * <code>bytes public_signer = 1;</code>
     */
    com.google.protobuf.ByteString getPublicSigner();

    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    boolean hasPrivateSigner();
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    msp.Mspconfig.KeyInfo getPrivateSigner();
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    msp.Mspconfig.KeyInfoOrBuilder getPrivateSignerOrBuilder();
  }
  /**
   * <pre>
   * SigningIdentityInfo represents the configuration information
   * related to the signing identity the peer is to use for generating
   * endorsements
   * </pre>
   *
   * Protobuf type {@code msp.SigningIdentityInfo}
   */
  public  static final class SigningIdentityInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msp.SigningIdentityInfo)
      SigningIdentityInfoOrBuilder {
    // Use SigningIdentityInfo.newBuilder() to construct.
    private SigningIdentityInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigningIdentityInfo() {
      publicSigner_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SigningIdentityInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              publicSigner_ = input.readBytes();
              break;
            }
            case 18: {
              msp.Mspconfig.KeyInfo.Builder subBuilder = null;
              if (privateSigner_ != null) {
                subBuilder = privateSigner_.toBuilder();
              }
              privateSigner_ = input.readMessage(msp.Mspconfig.KeyInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(privateSigner_);
                privateSigner_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msp.Mspconfig.internal_static_msp_SigningIdentityInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msp.Mspconfig.internal_static_msp_SigningIdentityInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msp.Mspconfig.SigningIdentityInfo.class, msp.Mspconfig.SigningIdentityInfo.Builder.class);
    }

    public static final int PUBLIC_SIGNER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString publicSigner_;
    /**
     * <pre>
     * PublicSigner carries the public information of the signing
     * identity. For an X.509 provider this would be represented by
     * an X.509 certificate
     * </pre>
     *
     * <code>bytes public_signer = 1;</code>
     */
    public com.google.protobuf.ByteString getPublicSigner() {
      return publicSigner_;
    }

    public static final int PRIVATE_SIGNER_FIELD_NUMBER = 2;
    private msp.Mspconfig.KeyInfo privateSigner_;
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    public boolean hasPrivateSigner() {
      return privateSigner_ != null;
    }
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    public msp.Mspconfig.KeyInfo getPrivateSigner() {
      return privateSigner_ == null ? msp.Mspconfig.KeyInfo.getDefaultInstance() : privateSigner_;
    }
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    public msp.Mspconfig.KeyInfoOrBuilder getPrivateSignerOrBuilder() {
      return getPrivateSigner();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!publicSigner_.isEmpty()) {
        output.writeBytes(1, publicSigner_);
      }
      if (privateSigner_ != null) {
        output.writeMessage(2, getPrivateSigner());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!publicSigner_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, publicSigner_);
      }
      if (privateSigner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrivateSigner());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msp.Mspconfig.SigningIdentityInfo)) {
        return super.equals(obj);
      }
      msp.Mspconfig.SigningIdentityInfo other = (msp.Mspconfig.SigningIdentityInfo) obj;

      boolean result = true;
      result = result && getPublicSigner()
          .equals(other.getPublicSigner());
      result = result && (hasPrivateSigner() == other.hasPrivateSigner());
      if (hasPrivateSigner()) {
        result = result && getPrivateSigner()
            .equals(other.getPrivateSigner());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PUBLIC_SIGNER_FIELD_NUMBER;
      hash = (53 * hash) + getPublicSigner().hashCode();
      if (hasPrivateSigner()) {
        hash = (37 * hash) + PRIVATE_SIGNER_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateSigner().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.SigningIdentityInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msp.Mspconfig.SigningIdentityInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SigningIdentityInfo represents the configuration information
     * related to the signing identity the peer is to use for generating
     * endorsements
     * </pre>
     *
     * Protobuf type {@code msp.SigningIdentityInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msp.SigningIdentityInfo)
        msp.Mspconfig.SigningIdentityInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msp.Mspconfig.internal_static_msp_SigningIdentityInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msp.Mspconfig.internal_static_msp_SigningIdentityInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msp.Mspconfig.SigningIdentityInfo.class, msp.Mspconfig.SigningIdentityInfo.Builder.class);
      }

      // Construct using msp.Mspconfig.SigningIdentityInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        publicSigner_ = com.google.protobuf.ByteString.EMPTY;

        if (privateSignerBuilder_ == null) {
          privateSigner_ = null;
        } else {
          privateSigner_ = null;
          privateSignerBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msp.Mspconfig.internal_static_msp_SigningIdentityInfo_descriptor;
      }

      public msp.Mspconfig.SigningIdentityInfo getDefaultInstanceForType() {
        return msp.Mspconfig.SigningIdentityInfo.getDefaultInstance();
      }

      public msp.Mspconfig.SigningIdentityInfo build() {
        msp.Mspconfig.SigningIdentityInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public msp.Mspconfig.SigningIdentityInfo buildPartial() {
        msp.Mspconfig.SigningIdentityInfo result = new msp.Mspconfig.SigningIdentityInfo(this);
        result.publicSigner_ = publicSigner_;
        if (privateSignerBuilder_ == null) {
          result.privateSigner_ = privateSigner_;
        } else {
          result.privateSigner_ = privateSignerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msp.Mspconfig.SigningIdentityInfo) {
          return mergeFrom((msp.Mspconfig.SigningIdentityInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msp.Mspconfig.SigningIdentityInfo other) {
        if (other == msp.Mspconfig.SigningIdentityInfo.getDefaultInstance()) return this;
        if (other.getPublicSigner() != com.google.protobuf.ByteString.EMPTY) {
          setPublicSigner(other.getPublicSigner());
        }
        if (other.hasPrivateSigner()) {
          mergePrivateSigner(other.getPrivateSigner());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msp.Mspconfig.SigningIdentityInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msp.Mspconfig.SigningIdentityInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString publicSigner_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * PublicSigner carries the public information of the signing
       * identity. For an X.509 provider this would be represented by
       * an X.509 certificate
       * </pre>
       *
       * <code>bytes public_signer = 1;</code>
       */
      public com.google.protobuf.ByteString getPublicSigner() {
        return publicSigner_;
      }
      /**
       * <pre>
       * PublicSigner carries the public information of the signing
       * identity. For an X.509 provider this would be represented by
       * an X.509 certificate
       * </pre>
       *
       * <code>bytes public_signer = 1;</code>
       */
      public Builder setPublicSigner(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        publicSigner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PublicSigner carries the public information of the signing
       * identity. For an X.509 provider this would be represented by
       * an X.509 certificate
       * </pre>
       *
       * <code>bytes public_signer = 1;</code>
       */
      public Builder clearPublicSigner() {
        
        publicSigner_ = getDefaultInstance().getPublicSigner();
        onChanged();
        return this;
      }

      private msp.Mspconfig.KeyInfo privateSigner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          msp.Mspconfig.KeyInfo, msp.Mspconfig.KeyInfo.Builder, msp.Mspconfig.KeyInfoOrBuilder> privateSignerBuilder_;
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public boolean hasPrivateSigner() {
        return privateSignerBuilder_ != null || privateSigner_ != null;
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public msp.Mspconfig.KeyInfo getPrivateSigner() {
        if (privateSignerBuilder_ == null) {
          return privateSigner_ == null ? msp.Mspconfig.KeyInfo.getDefaultInstance() : privateSigner_;
        } else {
          return privateSignerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public Builder setPrivateSigner(msp.Mspconfig.KeyInfo value) {
        if (privateSignerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          privateSigner_ = value;
          onChanged();
        } else {
          privateSignerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public Builder setPrivateSigner(
          msp.Mspconfig.KeyInfo.Builder builderForValue) {
        if (privateSignerBuilder_ == null) {
          privateSigner_ = builderForValue.build();
          onChanged();
        } else {
          privateSignerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public Builder mergePrivateSigner(msp.Mspconfig.KeyInfo value) {
        if (privateSignerBuilder_ == null) {
          if (privateSigner_ != null) {
            privateSigner_ =
              msp.Mspconfig.KeyInfo.newBuilder(privateSigner_).mergeFrom(value).buildPartial();
          } else {
            privateSigner_ = value;
          }
          onChanged();
        } else {
          privateSignerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public Builder clearPrivateSigner() {
        if (privateSignerBuilder_ == null) {
          privateSigner_ = null;
          onChanged();
        } else {
          privateSigner_ = null;
          privateSignerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public msp.Mspconfig.KeyInfo.Builder getPrivateSignerBuilder() {
        
        onChanged();
        return getPrivateSignerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      public msp.Mspconfig.KeyInfoOrBuilder getPrivateSignerOrBuilder() {
        if (privateSignerBuilder_ != null) {
          return privateSignerBuilder_.getMessageOrBuilder();
        } else {
          return privateSigner_ == null ?
              msp.Mspconfig.KeyInfo.getDefaultInstance() : privateSigner_;
        }
      }
      /**
       * <pre>
       * PrivateSigner denotes a reference to the private key of the
       * peer's signing identity
       * </pre>
       *
       * <code>.msp.KeyInfo private_signer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          msp.Mspconfig.KeyInfo, msp.Mspconfig.KeyInfo.Builder, msp.Mspconfig.KeyInfoOrBuilder> 
          getPrivateSignerFieldBuilder() {
        if (privateSignerBuilder_ == null) {
          privateSignerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              msp.Mspconfig.KeyInfo, msp.Mspconfig.KeyInfo.Builder, msp.Mspconfig.KeyInfoOrBuilder>(
                  getPrivateSigner(),
                  getParentForChildren(),
                  isClean());
          privateSigner_ = null;
        }
        return privateSignerBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:msp.SigningIdentityInfo)
    }

    // @@protoc_insertion_point(class_scope:msp.SigningIdentityInfo)
    private static final msp.Mspconfig.SigningIdentityInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msp.Mspconfig.SigningIdentityInfo();
    }

    public static msp.Mspconfig.SigningIdentityInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigningIdentityInfo>
        PARSER = new com.google.protobuf.AbstractParser<SigningIdentityInfo>() {
      public SigningIdentityInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SigningIdentityInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigningIdentityInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigningIdentityInfo> getParserForType() {
      return PARSER;
    }

    public msp.Mspconfig.SigningIdentityInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msp.KeyInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifier of the key inside the default keystore; this for
     * the case of Software BCCSP as well as the HSM BCCSP would be
     * the SKI of the key
     * </pre>
     *
     * <code>string key_identifier = 1;</code>
     */
    java.lang.String getKeyIdentifier();
    /**
     * <pre>
     * Identifier of the key inside the default keystore; this for
     * the case of Software BCCSP as well as the HSM BCCSP would be
     * the SKI of the key
     * </pre>
     *
     * <code>string key_identifier = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyIdentifierBytes();

    /**
     * <pre>
     * KeyMaterial (optional) for the key to be imported; this is
     * properly encoded key bytes, prefixed by the type of the key
     * </pre>
     *
     * <code>bytes key_material = 2;</code>
     */
    com.google.protobuf.ByteString getKeyMaterial();
  }
  /**
   * <pre>
   * KeyInfo represents a (secret) key that is either already stored
   * in the bccsp/keystore or key material to be imported to the
   * bccsp key-store. In later versions it may contain also a
   * keystore identifier
   * </pre>
   *
   * Protobuf type {@code msp.KeyInfo}
   */
  public  static final class KeyInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msp.KeyInfo)
      KeyInfoOrBuilder {
    // Use KeyInfo.newBuilder() to construct.
    private KeyInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyInfo() {
      keyIdentifier_ = "";
      keyMaterial_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private KeyInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              keyIdentifier_ = s;
              break;
            }
            case 18: {

              keyMaterial_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msp.Mspconfig.internal_static_msp_KeyInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msp.Mspconfig.internal_static_msp_KeyInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msp.Mspconfig.KeyInfo.class, msp.Mspconfig.KeyInfo.Builder.class);
    }

    public static final int KEY_IDENTIFIER_FIELD_NUMBER = 1;
    private volatile java.lang.Object keyIdentifier_;
    /**
     * <pre>
     * Identifier of the key inside the default keystore; this for
     * the case of Software BCCSP as well as the HSM BCCSP would be
     * the SKI of the key
     * </pre>
     *
     * <code>string key_identifier = 1;</code>
     */
    public java.lang.String getKeyIdentifier() {
      java.lang.Object ref = keyIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyIdentifier_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifier of the key inside the default keystore; this for
     * the case of Software BCCSP as well as the HSM BCCSP would be
     * the SKI of the key
     * </pre>
     *
     * <code>string key_identifier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyIdentifierBytes() {
      java.lang.Object ref = keyIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_MATERIAL_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString keyMaterial_;
    /**
     * <pre>
     * KeyMaterial (optional) for the key to be imported; this is
     * properly encoded key bytes, prefixed by the type of the key
     * </pre>
     *
     * <code>bytes key_material = 2;</code>
     */
    public com.google.protobuf.ByteString getKeyMaterial() {
      return keyMaterial_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyIdentifierBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyIdentifier_);
      }
      if (!keyMaterial_.isEmpty()) {
        output.writeBytes(2, keyMaterial_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyIdentifierBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyIdentifier_);
      }
      if (!keyMaterial_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, keyMaterial_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msp.Mspconfig.KeyInfo)) {
        return super.equals(obj);
      }
      msp.Mspconfig.KeyInfo other = (msp.Mspconfig.KeyInfo) obj;

      boolean result = true;
      result = result && getKeyIdentifier()
          .equals(other.getKeyIdentifier());
      result = result && getKeyMaterial()
          .equals(other.getKeyMaterial());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_IDENTIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getKeyIdentifier().hashCode();
      hash = (37 * hash) + KEY_MATERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getKeyMaterial().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msp.Mspconfig.KeyInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.KeyInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.KeyInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.KeyInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msp.Mspconfig.KeyInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KeyInfo represents a (secret) key that is either already stored
     * in the bccsp/keystore or key material to be imported to the
     * bccsp key-store. In later versions it may contain also a
     * keystore identifier
     * </pre>
     *
     * Protobuf type {@code msp.KeyInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msp.KeyInfo)
        msp.Mspconfig.KeyInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msp.Mspconfig.internal_static_msp_KeyInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msp.Mspconfig.internal_static_msp_KeyInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msp.Mspconfig.KeyInfo.class, msp.Mspconfig.KeyInfo.Builder.class);
      }

      // Construct using msp.Mspconfig.KeyInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyIdentifier_ = "";

        keyMaterial_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msp.Mspconfig.internal_static_msp_KeyInfo_descriptor;
      }

      public msp.Mspconfig.KeyInfo getDefaultInstanceForType() {
        return msp.Mspconfig.KeyInfo.getDefaultInstance();
      }

      public msp.Mspconfig.KeyInfo build() {
        msp.Mspconfig.KeyInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public msp.Mspconfig.KeyInfo buildPartial() {
        msp.Mspconfig.KeyInfo result = new msp.Mspconfig.KeyInfo(this);
        result.keyIdentifier_ = keyIdentifier_;
        result.keyMaterial_ = keyMaterial_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msp.Mspconfig.KeyInfo) {
          return mergeFrom((msp.Mspconfig.KeyInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msp.Mspconfig.KeyInfo other) {
        if (other == msp.Mspconfig.KeyInfo.getDefaultInstance()) return this;
        if (!other.getKeyIdentifier().isEmpty()) {
          keyIdentifier_ = other.keyIdentifier_;
          onChanged();
        }
        if (other.getKeyMaterial() != com.google.protobuf.ByteString.EMPTY) {
          setKeyMaterial(other.getKeyMaterial());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msp.Mspconfig.KeyInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msp.Mspconfig.KeyInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object keyIdentifier_ = "";
      /**
       * <pre>
       * Identifier of the key inside the default keystore; this for
       * the case of Software BCCSP as well as the HSM BCCSP would be
       * the SKI of the key
       * </pre>
       *
       * <code>string key_identifier = 1;</code>
       */
      public java.lang.String getKeyIdentifier() {
        java.lang.Object ref = keyIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyIdentifier_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the key inside the default keystore; this for
       * the case of Software BCCSP as well as the HSM BCCSP would be
       * the SKI of the key
       * </pre>
       *
       * <code>string key_identifier = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyIdentifierBytes() {
        java.lang.Object ref = keyIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the key inside the default keystore; this for
       * the case of Software BCCSP as well as the HSM BCCSP would be
       * the SKI of the key
       * </pre>
       *
       * <code>string key_identifier = 1;</code>
       */
      public Builder setKeyIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the key inside the default keystore; this for
       * the case of Software BCCSP as well as the HSM BCCSP would be
       * the SKI of the key
       * </pre>
       *
       * <code>string key_identifier = 1;</code>
       */
      public Builder clearKeyIdentifier() {
        
        keyIdentifier_ = getDefaultInstance().getKeyIdentifier();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the key inside the default keystore; this for
       * the case of Software BCCSP as well as the HSM BCCSP would be
       * the SKI of the key
       * </pre>
       *
       * <code>string key_identifier = 1;</code>
       */
      public Builder setKeyIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyIdentifier_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString keyMaterial_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * KeyMaterial (optional) for the key to be imported; this is
       * properly encoded key bytes, prefixed by the type of the key
       * </pre>
       *
       * <code>bytes key_material = 2;</code>
       */
      public com.google.protobuf.ByteString getKeyMaterial() {
        return keyMaterial_;
      }
      /**
       * <pre>
       * KeyMaterial (optional) for the key to be imported; this is
       * properly encoded key bytes, prefixed by the type of the key
       * </pre>
       *
       * <code>bytes key_material = 2;</code>
       */
      public Builder setKeyMaterial(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyMaterial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * KeyMaterial (optional) for the key to be imported; this is
       * properly encoded key bytes, prefixed by the type of the key
       * </pre>
       *
       * <code>bytes key_material = 2;</code>
       */
      public Builder clearKeyMaterial() {
        
        keyMaterial_ = getDefaultInstance().getKeyMaterial();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:msp.KeyInfo)
    }

    // @@protoc_insertion_point(class_scope:msp.KeyInfo)
    private static final msp.Mspconfig.KeyInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msp.Mspconfig.KeyInfo();
    }

    public static msp.Mspconfig.KeyInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyInfo>
        PARSER = new com.google.protobuf.AbstractParser<KeyInfo>() {
      public KeyInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new KeyInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyInfo> getParserForType() {
      return PARSER;
    }

    public msp.Mspconfig.KeyInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FabricOUIdentifierOrBuilder extends
      // @@protoc_insertion_point(interface_extends:msp.FabricOUIdentifier)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * CertifiersIdentifier is the hash of certificates chain of trust
     * related to this organizational unit
     * </pre>
     *
     * <code>bytes certifiers_identifier = 1;</code>
     */
    com.google.protobuf.ByteString getCertifiersIdentifier();

    /**
     * <pre>
     * OrganizationUnitIdentifier defines the organizational unit under the
     * MSP identified with MSPIdentifier
     * </pre>
     *
     * <code>string organizational_unit_identifier = 2;</code>
     */
    java.lang.String getOrganizationalUnitIdentifier();
    /**
     * <pre>
     * OrganizationUnitIdentifier defines the organizational unit under the
     * MSP identified with MSPIdentifier
     * </pre>
     *
     * <code>string organizational_unit_identifier = 2;</code>
     */
    com.google.protobuf.ByteString
        getOrganizationalUnitIdentifierBytes();
  }
  /**
   * <pre>
   * FabricOUIdentifier represents an organizazional unit and
   * its related chain of trust identifier.
   * </pre>
   *
   * Protobuf type {@code msp.FabricOUIdentifier}
   */
  public  static final class FabricOUIdentifier extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:msp.FabricOUIdentifier)
      FabricOUIdentifierOrBuilder {
    // Use FabricOUIdentifier.newBuilder() to construct.
    private FabricOUIdentifier(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FabricOUIdentifier() {
      certifiersIdentifier_ = com.google.protobuf.ByteString.EMPTY;
      organizationalUnitIdentifier_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FabricOUIdentifier(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              certifiersIdentifier_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              organizationalUnitIdentifier_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return msp.Mspconfig.internal_static_msp_FabricOUIdentifier_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return msp.Mspconfig.internal_static_msp_FabricOUIdentifier_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              msp.Mspconfig.FabricOUIdentifier.class, msp.Mspconfig.FabricOUIdentifier.Builder.class);
    }

    public static final int CERTIFIERS_IDENTIFIER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString certifiersIdentifier_;
    /**
     * <pre>
     * CertifiersIdentifier is the hash of certificates chain of trust
     * related to this organizational unit
     * </pre>
     *
     * <code>bytes certifiers_identifier = 1;</code>
     */
    public com.google.protobuf.ByteString getCertifiersIdentifier() {
      return certifiersIdentifier_;
    }

    public static final int ORGANIZATIONAL_UNIT_IDENTIFIER_FIELD_NUMBER = 2;
    private volatile java.lang.Object organizationalUnitIdentifier_;
    /**
     * <pre>
     * OrganizationUnitIdentifier defines the organizational unit under the
     * MSP identified with MSPIdentifier
     * </pre>
     *
     * <code>string organizational_unit_identifier = 2;</code>
     */
    public java.lang.String getOrganizationalUnitIdentifier() {
      java.lang.Object ref = organizationalUnitIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        organizationalUnitIdentifier_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * OrganizationUnitIdentifier defines the organizational unit under the
     * MSP identified with MSPIdentifier
     * </pre>
     *
     * <code>string organizational_unit_identifier = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOrganizationalUnitIdentifierBytes() {
      java.lang.Object ref = organizationalUnitIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        organizationalUnitIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!certifiersIdentifier_.isEmpty()) {
        output.writeBytes(1, certifiersIdentifier_);
      }
      if (!getOrganizationalUnitIdentifierBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, organizationalUnitIdentifier_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!certifiersIdentifier_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, certifiersIdentifier_);
      }
      if (!getOrganizationalUnitIdentifierBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, organizationalUnitIdentifier_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof msp.Mspconfig.FabricOUIdentifier)) {
        return super.equals(obj);
      }
      msp.Mspconfig.FabricOUIdentifier other = (msp.Mspconfig.FabricOUIdentifier) obj;

      boolean result = true;
      result = result && getCertifiersIdentifier()
          .equals(other.getCertifiersIdentifier());
      result = result && getOrganizationalUnitIdentifier()
          .equals(other.getOrganizationalUnitIdentifier());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CERTIFIERS_IDENTIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getCertifiersIdentifier().hashCode();
      hash = (37 * hash) + ORGANIZATIONAL_UNIT_IDENTIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getOrganizationalUnitIdentifier().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static msp.Mspconfig.FabricOUIdentifier parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(msp.Mspconfig.FabricOUIdentifier prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FabricOUIdentifier represents an organizazional unit and
     * its related chain of trust identifier.
     * </pre>
     *
     * Protobuf type {@code msp.FabricOUIdentifier}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:msp.FabricOUIdentifier)
        msp.Mspconfig.FabricOUIdentifierOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return msp.Mspconfig.internal_static_msp_FabricOUIdentifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return msp.Mspconfig.internal_static_msp_FabricOUIdentifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                msp.Mspconfig.FabricOUIdentifier.class, msp.Mspconfig.FabricOUIdentifier.Builder.class);
      }

      // Construct using msp.Mspconfig.FabricOUIdentifier.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        certifiersIdentifier_ = com.google.protobuf.ByteString.EMPTY;

        organizationalUnitIdentifier_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return msp.Mspconfig.internal_static_msp_FabricOUIdentifier_descriptor;
      }

      public msp.Mspconfig.FabricOUIdentifier getDefaultInstanceForType() {
        return msp.Mspconfig.FabricOUIdentifier.getDefaultInstance();
      }

      public msp.Mspconfig.FabricOUIdentifier build() {
        msp.Mspconfig.FabricOUIdentifier result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public msp.Mspconfig.FabricOUIdentifier buildPartial() {
        msp.Mspconfig.FabricOUIdentifier result = new msp.Mspconfig.FabricOUIdentifier(this);
        result.certifiersIdentifier_ = certifiersIdentifier_;
        result.organizationalUnitIdentifier_ = organizationalUnitIdentifier_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof msp.Mspconfig.FabricOUIdentifier) {
          return mergeFrom((msp.Mspconfig.FabricOUIdentifier)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(msp.Mspconfig.FabricOUIdentifier other) {
        if (other == msp.Mspconfig.FabricOUIdentifier.getDefaultInstance()) return this;
        if (other.getCertifiersIdentifier() != com.google.protobuf.ByteString.EMPTY) {
          setCertifiersIdentifier(other.getCertifiersIdentifier());
        }
        if (!other.getOrganizationalUnitIdentifier().isEmpty()) {
          organizationalUnitIdentifier_ = other.organizationalUnitIdentifier_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        msp.Mspconfig.FabricOUIdentifier parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (msp.Mspconfig.FabricOUIdentifier) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString certifiersIdentifier_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * CertifiersIdentifier is the hash of certificates chain of trust
       * related to this organizational unit
       * </pre>
       *
       * <code>bytes certifiers_identifier = 1;</code>
       */
      public com.google.protobuf.ByteString getCertifiersIdentifier() {
        return certifiersIdentifier_;
      }
      /**
       * <pre>
       * CertifiersIdentifier is the hash of certificates chain of trust
       * related to this organizational unit
       * </pre>
       *
       * <code>bytes certifiers_identifier = 1;</code>
       */
      public Builder setCertifiersIdentifier(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        certifiersIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CertifiersIdentifier is the hash of certificates chain of trust
       * related to this organizational unit
       * </pre>
       *
       * <code>bytes certifiers_identifier = 1;</code>
       */
      public Builder clearCertifiersIdentifier() {
        
        certifiersIdentifier_ = getDefaultInstance().getCertifiersIdentifier();
        onChanged();
        return this;
      }

      private java.lang.Object organizationalUnitIdentifier_ = "";
      /**
       * <pre>
       * OrganizationUnitIdentifier defines the organizational unit under the
       * MSP identified with MSPIdentifier
       * </pre>
       *
       * <code>string organizational_unit_identifier = 2;</code>
       */
      public java.lang.String getOrganizationalUnitIdentifier() {
        java.lang.Object ref = organizationalUnitIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          organizationalUnitIdentifier_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * OrganizationUnitIdentifier defines the organizational unit under the
       * MSP identified with MSPIdentifier
       * </pre>
       *
       * <code>string organizational_unit_identifier = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOrganizationalUnitIdentifierBytes() {
        java.lang.Object ref = organizationalUnitIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          organizationalUnitIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * OrganizationUnitIdentifier defines the organizational unit under the
       * MSP identified with MSPIdentifier
       * </pre>
       *
       * <code>string organizational_unit_identifier = 2;</code>
       */
      public Builder setOrganizationalUnitIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        organizationalUnitIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OrganizationUnitIdentifier defines the organizational unit under the
       * MSP identified with MSPIdentifier
       * </pre>
       *
       * <code>string organizational_unit_identifier = 2;</code>
       */
      public Builder clearOrganizationalUnitIdentifier() {
        
        organizationalUnitIdentifier_ = getDefaultInstance().getOrganizationalUnitIdentifier();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OrganizationUnitIdentifier defines the organizational unit under the
       * MSP identified with MSPIdentifier
       * </pre>
       *
       * <code>string organizational_unit_identifier = 2;</code>
       */
      public Builder setOrganizationalUnitIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        organizationalUnitIdentifier_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:msp.FabricOUIdentifier)
    }

    // @@protoc_insertion_point(class_scope:msp.FabricOUIdentifier)
    private static final msp.Mspconfig.FabricOUIdentifier DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new msp.Mspconfig.FabricOUIdentifier();
    }

    public static msp.Mspconfig.FabricOUIdentifier getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FabricOUIdentifier>
        PARSER = new com.google.protobuf.AbstractParser<FabricOUIdentifier>() {
      public FabricOUIdentifier parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FabricOUIdentifier(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FabricOUIdentifier> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FabricOUIdentifier> getParserForType() {
      return PARSER;
    }

    public msp.Mspconfig.FabricOUIdentifier getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msp_MSPConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msp_MSPConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msp_FabricMSPConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msp_FabricMSPConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msp_SigningIdentityInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msp_SigningIdentityInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msp_KeyInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msp_KeyInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_msp_FabricOUIdentifier_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_msp_FabricOUIdentifier_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023msp/mspconfig.proto\022\003msp\")\n\tMSPConfig\022" +
      "\014\n\004type\030\001 \001(\005\022\016\n\006config\030\002 \001(\014\"\356\001\n\017Fabric" +
      "MSPConfig\022\014\n\004name\030\001 \001(\t\022\022\n\nroot_certs\030\002 " +
      "\003(\014\022\032\n\022intermediate_certs\030\003 \003(\014\022\016\n\006admin" +
      "s\030\004 \003(\014\022\027\n\017revocation_list\030\005 \003(\014\0222\n\020sign" +
      "ing_identity\030\006 \001(\0132\030.msp.SigningIdentity" +
      "Info\022@\n\037organizational_unit_identifiers\030" +
      "\007 \003(\0132\027.msp.FabricOUIdentifier\"R\n\023Signin" +
      "gIdentityInfo\022\025\n\rpublic_signer\030\001 \001(\014\022$\n\016" +
      "private_signer\030\002 \001(\0132\014.msp.KeyInfo\"7\n\007Ke",
      "yInfo\022\026\n\016key_identifier\030\001 \001(\t\022\024\n\014key_mat" +
      "erial\030\002 \001(\014\"[\n\022FabricOUIdentifier\022\035\n\025cer" +
      "tifiers_identifier\030\001 \001(\014\022&\n\036organization" +
      "al_unit_identifier\030\002 \001(\tB*Z(github.com/h" +
      "yperledger/fabric/protos/mspb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_msp_MSPConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_msp_MSPConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msp_MSPConfig_descriptor,
        new java.lang.String[] { "Type", "Config", });
    internal_static_msp_FabricMSPConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_msp_FabricMSPConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msp_FabricMSPConfig_descriptor,
        new java.lang.String[] { "Name", "RootCerts", "IntermediateCerts", "Admins", "RevocationList", "SigningIdentity", "OrganizationalUnitIdentifiers", });
    internal_static_msp_SigningIdentityInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_msp_SigningIdentityInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msp_SigningIdentityInfo_descriptor,
        new java.lang.String[] { "PublicSigner", "PrivateSigner", });
    internal_static_msp_KeyInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_msp_KeyInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msp_KeyInfo_descriptor,
        new java.lang.String[] { "KeyIdentifier", "KeyMaterial", });
    internal_static_msp_FabricOUIdentifier_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_msp_FabricOUIdentifier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_msp_FabricOUIdentifier_descriptor,
        new java.lang.String[] { "CertifiersIdentifier", "OrganizationalUnitIdentifier", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
